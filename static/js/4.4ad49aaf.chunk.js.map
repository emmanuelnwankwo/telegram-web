{"version":3,"sources":["Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Popup/ReportChatDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Utils/Game.js","Assets/Icons/CallEnd.js","Components/Calls/CallSettingsVideoPreview.js","Components/Calls/GroupCallMicAmplitude.js","Utils/Text.js","Components/Calls/GroupCallSettings.js","Assets/Icons/More.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/CallPanel.js","Components/Calls/Call.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacyCalls.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/Button.js","Components/Calls/GroupCallMicButtonHint.js","Components/Calls/GroupCallMicButton.js","Components/Calls/GroupCallPanelButtons.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js","Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js"],"names":["withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","this","props","React","Component","displayName","getDisplayName","AlertDialog","handleClose","result","onClose","params","t","title","message","ok","cancel","getFormattedText","open","manager","modalManager","transitionDuration","classes","paper","DialogContentText","DialogActions","onClick","color","withTranslation","BlockSenderDialog","state","reportSpam","deleteChat","handleReportSpamChange","setState","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","aria-labelledby","id","className","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","time","parseInt","timeString","Math","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","aria-label","edge","FormHelperText","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","LeaveVoiceChatDialog","discard","handleDiscardChange","NotificationTimer","handleTimer","now","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","startTime","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","PinMessageDialog","prevMessageId","ReportChatDialog","handleReport","ListItem","button","ListItemText","primary","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","UnpinMessageDialog","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","reportChatAlert","onClientUpdateReportChat","update","onClientUpdateBlockSender","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","a","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","TdLibController","send","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","getClientData","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","newWindow","window","opener","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","openGameInBrowser","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","handleReportChatContinue","showSnackbar","Close","on","off","PureComponent","enhance","compose","withSnackbar","createSvgIcon","d","CallSettingsVideoPreview","stream","video","document","getElementById","srcObject","prevProps","prevState","snapshot","autoPlay","muted","GroupCallMicAmplitude","audioContext","AudioContext","webkitAudioContext","timer","addAnalyser","removeAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","analyse","disconnect","frequencyBinCount","getByteFrequencyData","getAmplitude","bars","viewBox","fill","strokeWidth","width","copy","navigator","clipboard","writeText","console","copyOld","element","successful","createElement","contentEditable","readOnly","all","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","GroupCallSettings","onKeyDown","modals","isComposing","openDeviceSelect","handleCloseDeviceSelect","stopPropagation","handleCancel","onUpdateGroupCall","groupCallId","group_call","muteNewParticipants","mute_new_participants","allowedChangeMuteNewParticipants","allowed_change_mute_new_participants","onDeviceChange","mediaDevices","enumerateDevices","devices","CallStore","outputDeviceId","getOutputDeviceId","filter","x","kind","deviceId","inputAudioDeviceId","getInputAudioDeviceId","inputAudio","inputVideoDeviceId","getInputVideoDeviceId","inputVideo","handleOutputChange","handleCopyLink","currentGroupCall","username","getChatUsername","telegramUrlOption","handleOpenDeviceSelect","handleSelectDevice","setOutputDeviceId","currentCall","streamManager","inputAudioStream","getAudioTracks","forEach","stop","getStream","audio","exact","inputVideoStream","getVideoTracks","handleEnd","call","leaveGroupCall","handleMuteNewParticipants","toggleMuteNewParticipants","handleDone","setInputAudioDeviceId","setInputVideoDeviceId","keyboardHandler","KeyboardHandler","addEventListener","KeyboardManager","add","removeEventListener","remove","closeStreams","callId","outputDeviceInfo","find","outputString","inputAudioDeviceInfo","inputAudioString","inputVideoDeviceInfo","inputVideoString","items","map","canManage","canManageVoiceChats","onMouseDown","Switch","disableRipple","root","switchBase","colorSecondary","track","prevGroupCallId","prevCallId","muteSettings","groupCall","CallPanel","onClientUpdateCallMediaState","currentCallId","mediaState","inputMediaState","outputMediaState","handleUpdateCall","forceUpdate","handleFullScreenChange","fullScreen","isFullScreen","handleClick","handleAccept","p2pAcceptCall","handleDiscard","closeCallPanel","setTimeout","p2pHangUp","handleOpenSettings","handleCloseContextMenu","openSettings","handleCloseSettings","handleShareScreen","screenStream","p2pStopScreenSharing","p2pStartScreenSharing","handleFullScreen","exitFullscreen","requestFullscreen","handleOpenContextMenu","currentTarget","anchorEl","handleAudio","p2pAudioEnabled","handleVideo","videoState","p2pVideoEnabled","callPanelRef","createRef","contextMenu","left","p2pGetMediaState","callPanel","current","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","p2pGet","is_outgoing","screenSharing","outputVideoStyle","isFirefox","transform","videoRotation","classNames","ref","p2pGetCallStatus","Popover","container","getContentAnchorEl","disableRestoreFocus","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","onDoubleClick","MicOff","CallEnd","p2pIsCallReady","Mic","Call","onClientUpdateGroupCallFullScreen","fullscreen","closeGroupCallPanel","handleMouseDown","nativeEvent","which","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","onWindowResize","player","oldLeft","oldTop","normalizePosition","startLeft","startTop","setPosition","pipParams","documentElement","clientWidth","clientHeight","prevLeft","prevTop","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","clamp","glueTop","glueBottom","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","showSavedMessages","isChatVerified","getChatTitle","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","Chat","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","ListItemIcon","tabIndex","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","Animator","from","scrollLeft","to","offsetWidth","func","start","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","set","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","anchorReference","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","clientX","clientY","nextContext","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","content","description","animation","sticker","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","duration","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","overScanCount","SharedMediaContent","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","source","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","setItems","store","getStore","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","then","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyUp","onPaste","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","Pending","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","offset_order","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","sin","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","min","scrollBottom","max","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","parameters","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","load","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","options","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","disableAutoFocusItem","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","stub","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","SectionHeader","command","multiline","children","Search","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","requestAnimationFrame","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","wrapperRef","searchRef","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","aria-describedby","component","FormLabel","focused","RadioGroup","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacyCalls","prevAllowCalls","prevAllowP2PCalls","handleChangeAllowCalls","allowCallsValue","handleChangeAllowP2PCalls","allowP2PCallsValue","setSettings","allowCalls","allowP2PCalls","prevAllowCallsValue","rules","added","setting","prevAllowP2PCallsValue","PrivacySecurity","openActiveSessions","openBlockedUsers","openCalls","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","closeCalls","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","join","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","n","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","input_message_content","handleEmojiSelect","emoji","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","permissions","can_send_messages","SCALE_BIG","SCALE_SMALL","SCALE_BIG_MIN","SCALE_SMALL_MIN","FORM_BIG_MAX","FORM_SMALL_MAX","LIGHT_GRADIENT_SIZE","rotateZ","angle","originX","originY","X","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","PI","radius","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","progressNext","r1","r2","angle1","angle2","l","mapPoints","moveTo","bezierCurveTo","closePath","points","result1","result2","LineBlobDrawable","bottom","pinnedTop","progressToPinned","lineTo","MUTE_BUTTON_STATE_UNMUTE","MUTE_BUTTON_STATE_MUTE","MUTE_BUTTON_STATE_CONNECTING","MUTE_BUTTON_STATE_MUTED_BY_ADMIN","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","dt","x0","y0","gradient","createLinearGradient","addColorStop","TopBar","handleDevicePixelRatioChanged","scale","devicePixelRatio","topBar","handleResize","resizeHandler","resizing","resizeCanvas","invokeDraw","handleBlur","raf","draw","mounted","lbd","lbd1","lbd2","currentState","previousState","progressToState","newTime","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","clearRect","alpha","paint1","globalAlpha","setCurrentState","animated","states","matchMedia","setAmplitude","GroupCallTopPanel","onClientUpdateGroupCallAmplitudeChange","amplitudes","topBarRef","onUpdateGroupCallParticipant","group_call_id","participant","getCallStatus","connected","switchButtonState","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","can_unmute_self","changeUserMuted","handleLeave","handleOpenGroupCall","openGroupCallPanel","elements","getElementsByClassName","openPanel","offsetHeightDiff","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","startGroupCall","handleStartP2PCall","p2pStartCall","openReportChat","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","reported","canBeReported","called","canBeCalled","p2pCallsEnabled","Broom","Block","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","timingFunction","animateOnMount","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","canReport","PinnedMessageBorder","drawRect","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","isCall","isCallMessage","albumHistoryEquals","AlbumItem","getAlbumItem","displaySize","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","every","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","GroupCallRecentParticipants","speakers","recent_speakers","updateSpeakers","PROFILE_PHOTO_PRELOAD_TIME_MS","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","StickerSourceEnum","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","require","pageLink","startSiteVisit","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","showMeta","msg","urlExists","err","resp","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","StickerPreview","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","handleInViewport","elementRect","contentRect","getBoundingClientRect","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","radOffset","rotationTime","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","circleRect","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","restore","isCircle","lineCap","strokeStyle","Button","switchProgress","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","canSwitchProgress","radialProgressView","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","resetTransform","paintTmp","scaleLight","drawCircle","updateMuteButton","muteButtonState","updateMuteButtonState","radialPaint","generateInitBlob","colorsToSet","color1","color2","c1","c2","inverseRatio","g","strToHex","justifyContent","cursor","GroupCallMicButtonHint","GroupCallMicButton","buttonRef","is_muted","GroupCallPanelButtons","GroupCallParticipant","handleOpenProfile","handleSendMessage","handleUnmute","is_muted_for_all_users","is_muted_for_current_user","can_be_muted_for_all_users","can_be_unmuted_for_all_users","prevUserId","participants","GroupCallParticipants","participantsMap","updateParticipants","preloadContent","manageGroupCalls","AddMember","GroupCallSettingsButton","Tune","GroupCallPanel","GroupCall","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","scrollIntoView","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","bufferedTime","Player","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateCallPanel","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage","stopped","startInternal","timeStamp","endTime","last","p","val","outSine","cancelAnimationFrame","prevPropsSticker","loadStickerEmojis","emojis","STICKER_PREVIEW_DISPLAY_SIZE","PREVIEW"],"mappings":"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","file":"static/js/4.4ad49aaf.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport { getFormattedText } from '../../Utils/Message';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(result);\n    };\n\n    render() {\n        const { params, t } = this.props;\n        if (!params) return null;\n\n        let { title, message, ok, cancel } = params;\n\n        if (message['@type'] === 'formattedText') {\n            message = getFormattedText(message, t, {});\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default withTranslation()(AlertDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './BlockSenderDialog.css';\n\nclass BlockSenderDialog extends React.Component {\n    state = {\n        reportSpam: true,\n        deleteChat: true\n    };\n\n    handleReportSpamChange = () => {\n        const { reportSpam } = this.state;\n\n        this.setState({\n            reportSpam: !reportSpam\n        });\n    };\n\n    handleDeleteChatChange = () => {\n        const { deleteChat } = this.state;\n\n        this.setState({\n            deleteChat: !deleteChat\n        });\n    };\n\n    render() {\n        const { sender, onClose, t } = this.props;\n        if (!sender) return null;\n\n        const { reportSpam, deleteChat } = this.state;\n\n        let title = null;\n        let text = null;\n        const entities = [];\n        let reportText = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                const { user_id } = sender;\n\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\n                text = getSimpleMarkupEntities(text, entities);\n                reportText = LStore.getString('BlockContact');\n                break;\n            }\n            case 'messageSenderChat': {\n                const { chat_id } = sender;\n\n                const location = getChatLocation(chat_id);\n                if (location) {\n                    title = LStore.getString('ReportUnrelatedGroup');\n                    if (location.address) {\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\n                        text = getSimpleMarkupEntities(text, entities);\n                    } else {\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\n                    }\n                } else {\n                    title = LStore.getString('ReportSpamTitle');\n                    if (isChannelChat(chat_id)) {\n                        text = LStore.getString('ReportSpamAlertChannel');\n                    } else {\n                        text = LStore.getString('ReportSpamAlertGroup');\n                    }\n                }\n                reportText = LStore.getString('ReportChat');\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\n                    </DialogContentText>\n                    { sender['@type'] === 'messageSenderUser' && (\n                        <div className='block-sender-params'>\n                            <FormControlLabel\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\n                                label={t('DeleteReportSpam')}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\n                                label={t('DeleteThisChat')}\n                            />\n                        </div>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\n                        {reportText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nBlockSenderDialog.propTypes = {\n    sender: PropTypes.object\n};\n\nexport default withTranslation()(BlockSenderDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './InputPasswordDialog.css';\n\nclass InputPasswordDialog extends React.Component {\n\n    state = { };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleClickShowPassword = () => {\n        const { showPassword } = this.state;\n\n        this.setState({ showPassword: !showPassword });\n    };\n\n    getErrorMessage = error => {\n        const { t } = this.props;\n\n        if (!error) return null;\n\n        if (error.message === 'PASSWORD_HASH_INVALID') {\n            return t('InvalidPassword');\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\n            const str = error.message.replace('Too Many Requests: retry after ', '');\n            try {\n                const time = parseInt(str);\n                const timeString = time < 60\n                    ? LStore.formatPluralString('Seconds', time)\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\n\n                return LStore.formatString('FloodWaitTime', timeString);\n            } catch (e) {\n                return error.message;\n            }\n        }\n\n        return error.message;\n    }\n\n    render() {\n        const { state, error, onClose, t } = this.props;\n        if (!state) return null;\n\n        const { showPassword, loading } = this.state;\n        const { password_hint: passwordHint } = state;\n\n        const errorMessage = this.getErrorMessage(error);\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('PleaseEnterCurrentPasswordTransfer')}\n                    </DialogContentText>\n                    <FormControl className='auth-input' fullWidth>\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\n                        <Input\n                            fullWidth\n                            autoFocus\n                            autoComplete='off'\n                            id='adornment-password'\n                            type={showPassword ? 'text' : 'password'}\n                            disabled={loading}\n                            error={Boolean(error)}\n                            onChange={this.handleChange}\n                            endAdornment={\n                                <InputAdornment position='end'>\n                                    <IconButton\n                                        aria-label='Toggle password visibility'\n                                        onClick={this.handleClickShowPassword}\n                                        edge='end'>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nInputPasswordDialog.propTypes = {\n    state: PropTypes.object,\n    error: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(InputPasswordDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './LeaveVoiceChatDialog.css';\n\nclass LeaveVoiceChatDialog extends React.Component {\n    state = {\n        discard: false\n    };\n\n    handleDiscardChange = () => {\n        const { discard } = this.state;\n\n        this.setState({\n            discard: !discard\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { discard } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.getString('VoipGroupLeaveAlertText')}\n                    </DialogContentText>\n                    <FormControlLabel\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\n                        label={t('VoipGroupEndChat')}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\n                        {t('VoipGroupLeave')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nLeaveVoiceChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { modalManager } from '../../Utils/Modal';\nimport './ReportChatDialog.css';\n\nclass ReportChatDialog extends React.Component {\n\n    handleReport = type => {\n        const { onClose } = this.props;\n\n        onClose && onClose(true, { '@type': type });\n    }\n\n    render() {\n        const { onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('ReportChat')}</DialogTitle>\n                <div className='report-chat-dialog-content'>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonSpam')}>\n                        <ListItemText primary={t('ReportChatSpam')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonFake')}>\n                        <ListItemText primary={t('ReportChatFakeAccount')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonViolence')}>\n                        <ListItemText primary={t('ReportChatViolence')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonPornography')}>\n                        <ListItemText primary={t('ReportChatPornography')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonChildAbuse')}>\n                        <ListItemText primary={t('ReportChatChild')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonCustom')}>\n                        <ListItemText primary={t('ReportChatOther')}/>\n                    </ListItem>\n                </div>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('ReportChat')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nReportChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ReportChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport ReportChatDialog from './Popup/ReportChatDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { clearSelection, closePinned, showSnackbar } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { reportChat } from '../Actions/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport CloseIcon from '../Assets/Icons/Close';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null,\n        inputPasswordAlert: null,\n        requestBlockSenderAlert: null,\n        leaveVoiceChatAlert: null,\n        reportChatAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.on('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.off('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    onClientUpdateReportChat = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({ reportChatAlert: { chatId, messageIds }});\n    };\n\n    onClientUpdateBlockSender = update => {\n        const { sender } = update;\n\n        this.setState({ requestBlockSenderAlert: { sender }});\n    }\n\n    onClientUpdateInputPasswordAlert = update => {\n        const { state, onPassword } = update;\n\n        this.setState({ inputPasswordAlert: { state, onPassword } });\n    }\n\n    onClientUpdateLeaveVoiceChatAlert = update => {\n        const { params } = update;\n\n        this.setState({ leaveVoiceChatAlert: { params }});\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = async (result, undo = true) => {\n        const { leaveChat } = this.state || this;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.leaveChat = null;\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        if (undo) {\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n        } else {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n\n            }\n        }\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                closeSnackbar(snackKey);\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            closeSnackbar(snackKey);\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            AppStore.removeScheduledAction(key);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        AppStore.removeScheduledAction(key);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        const { alert } = this.state;\n        if (!alert) return;\n\n        const { params } = alert;\n        this.setState({ alert: null });\n\n        const { onResult } = params;\n        onResult && onResult(result);\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            event && event.preventDefault();\n\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    handleInputPasswordContinue = (result, password) => {\n        const { inputPasswordAlert } = this.state;\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\n\n        if (!result) {\n            onCloseDialog();\n            return;\n        }\n\n        const { onPassword } = inputPasswordAlert;\n        onPassword && onPassword(password, onCloseDialog, onError);\n    };\n\n    handleBlockSenderContinue = async (result, params) => {\n        const { requestBlockSenderAlert } = this.state;\n\n        this.setState({ requestBlockSenderAlert: null });\n\n        if (!result) {\n            return;\n        }\n\n        const { sender } = requestBlockSenderAlert;\n        if (!sender) return;\n\n        let chatId = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                blockSender(sender);\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\n                break;\n            }\n            case 'messageSenderChat': {\n                chatId = sender.chat_id;\n                break;\n            }\n        }\n\n        if (!params || params.reportSpam) {\n            const reason = getChatLocation(chatId)\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\n                : { '@type': 'chatReportReasonSpam' };\n\n            reportChat(chatId, reason);\n        }\n\n        if (!params || params.deleteChat) {\n            const deleteChat = canDeleteChat(chatId);\n            if (!deleteChat) return;\n\n            this.leaveChat = { chatId };\n            this.handleLeaveContinue(true, false);\n        }\n    };\n\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\n        const { leaveVoiceChatAlert } = this.state;\n\n        this.setState({ leaveVoiceChatAlert: null });\n\n        const { params } = leaveVoiceChatAlert;\n        if (!params) return;\n\n        const { onResult } = params;\n\n        onResult && onResult(resultParams);\n    };\n\n    handleReportChatContinue = (result, params) => {\n        const { t } = this.props;\n        const { reportChatAlert } = this.state;\n\n        this.setState({ reportChatAlert: null });\n        if (!result) return;\n\n        const { chatId, messageIds } = reportChatAlert;\n\n        showSnackbar(t('ReportChatSent'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    render() {\n        const {\n            leaveChat,\n            clearHistory,\n            deleteMessages,\n            pinMessage,\n            unpinMessage,\n            alert,\n            openUrlAlert,\n            openGameAlert,\n            requestUrlAlert,\n            inputPasswordAlert,\n            requestBlockSenderAlert,\n            leaveVoiceChatAlert,\n            reportChatAlert\n        } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        } else if (inputPasswordAlert) {\n            const { state, error } = inputPasswordAlert;\n\n            return (\n                <InputPasswordDialog\n                    state={state}\n                    error={error}\n                    onClose={this.handleInputPasswordContinue}/>\n            );\n        } else if (requestBlockSenderAlert) {\n            const { sender } = requestBlockSenderAlert;\n\n            return (\n                <BlockSenderDialog\n                    sender={sender}\n                    onClose={this.handleBlockSenderContinue}/>\n            );\n        } else if (leaveVoiceChatAlert) {\n            const { params } = leaveVoiceChatAlert;\n\n            return (\n                <LeaveVoiceChatDialog\n                    params={params}\n                    onClose={this.handleLeaveVoiceChatContinue}/>\n            );\n        } else if (reportChatAlert) {\n            const { chatId, messageIds } = reportChatAlert;\n\n            return (\n                <ReportChatDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleReportChatContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\n    'CallEnd'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './CallSettingsVideoPreview.css';\n\nclass CallSettingsVideoPreview extends React.Component {\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            const video = document.getElementById('call-settings-video');\n            if (video) {\n                video.srcObject = stream;\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            const video = document.getElementById('call-settings-video');\n            if (video) {\n                video.srcObject = stream;\n            }\n        }\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n\n        return (\n            <div>\n                <video id='call-settings-video' autoPlay={true} muted={true}/>\n            </div>\n        );\n    }\n\n}\n\nCallSettingsVideoPreview.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default CallSettingsVideoPreview;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getAmplitude } from '../../Calls/Utils';\nimport './GroupCallMicAmplitude.css';\n\nclass GroupCallMicAmplitude extends React.Component {\n    constructor(props) {\n        super(props);\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.timer = null;\n\n        this.state = {\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.addAnalyser(stream);\n        }\n    }\n\n    componentWillUnmount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.removeAnalyser(stream);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            this.removeAnalyser(prevProps.stream);\n            this.addAnalyser(stream);\n        }\n    }\n\n    addAnalyser(stream) {\n        if (!stream) return;\n\n        const { audioContext } = this;\n        if (!audioContext) return;\n\n        this.streamSource = audioContext.createMediaStreamSource(stream);\n        if (!this.analyser) {\n            const analyser = audioContext.createAnalyser();\n            analyser.minDecibels = -100;\n            analyser.maxDecibels = -30;\n            analyser.smoothingTimeConstant = 0.05;\n            analyser.fftSize = 1024;\n\n            this.analyser = analyser;\n        }\n        this.streamSource.connect(this.analyser);\n\n        this.timer = setInterval(() => this.analyse(), 100);\n    }\n\n    removeAnalyser(stream) {\n        if (!stream) return;\n\n        if (this.analyser && this.streamSource) {\n            this.streamSource.disconnect(this.analyser);\n        }\n\n        clearInterval(this.timer);\n    }\n\n    analyse() {\n        const { analyser } = this;\n        if (!analyser) return;\n\n        const array = new Uint8Array(analyser.frequencyBinCount);\n        analyser.getByteFrequencyData(array);\n        const value = getAmplitude(array, 1.5);\n\n        this.setState({\n            value\n        });\n    }\n\n    render() {\n        const { value } = this.state;\n\n        let d = '';\n        for (let i = 0; i < 35; i++) {\n            const x = i * 8 + 1.5;\n            d += `M${x},0v15Z`;\n        }\n\n        const bars = (\n            <svg className='group-call-mic-amplitude-bars' viewBox='0 0 275 15'>\n                <path d={d} fill='currentColor' strokeWidth={3}/>\n            </svg>\n        );\n\n        return (\n            <div className='group-call-mic-amplitude'>\n                {bars}\n                <div className='group-call-mic-amplitude-bars-accent' style={{ width: 275 * value }}>\n                    {bars}\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallMicAmplitude.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default GroupCallMicAmplitude;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CallSettingsVideoPreview from './CallSettingsVideoPreview';\nimport GroupCallMicAmplitude from './GroupCallMicAmplitude';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport { copy } from '../../Utils/Text';\nimport { canManageVoiceChats, getChatUsername } from '../../Utils/Chat';\nimport { getStream } from '../../Calls/Utils';\nimport { showSnackbar } from '../../Actions/Client';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport './GroupCallSettings.css';\n\nclass GroupCallSettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = { };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                const { openDeviceSelect } = this.state;\n                if (openDeviceSelect) {\n                    this.handleCloseDeviceSelect();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n\n                this.handleCancel();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId, callId } = props;\n        const { prevGroupCallId, prevCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            let muteSettings = { };\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const {\n                    mute_new_participants: muteNewParticipants,\n                    allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n                } = groupCall;\n\n                muteSettings = {\n                    muteNewParticipants,\n                    allowedChangeMuteNewParticipants\n                }\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo,\n                ...muteSettings\n            };\n        } else if (prevCallId !== callId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            return {\n                prevCallId: callId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.handleSelectDevice('inputAudio', CallStore.getInputAudioDeviceId());\n        this.handleSelectDevice('inputVideo', CallStore.getInputVideoDeviceId());\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.addEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.add(this.keyboardHandler);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.removeEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.remove(this.keyboardHandler);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n\n        this.closeStreams();\n    }\n\n    closeStreams() {\n        const { inputAudioStream, inputAudioDeviceId, inputVideoStream, inputVideoDeviceId } = this.state;\n        if (inputAudioStream) {\n            if (!CallStore.currentGroupCall || !CallStore.currentCall || inputAudioDeviceId === CallStore.getInputAudioDeviceId()) {\n                inputAudioStream.getAudioTracks().forEach(x => {\n                    x.stop();\n                });\n            }\n        }\n        if (inputVideoStream) {\n            if (!CallStore.currentGroupCall || !CallStore.currentCall || inputVideoDeviceId === CallStore.getInputVideoDeviceId()) {\n                inputVideoStream.getAudioTracks().forEach(x => {\n                    x.stop();\n                });\n            }\n        }\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n        if (!group_call) return;\n\n        const {\n            id,\n            mute_new_participants: muteNewParticipants,\n            allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n        } = group_call;\n        if (id !== groupCallId) return;\n\n        this.setState({\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        });\n    };\n\n    onDeviceChange = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        CallStore.devices = devices;\n\n        const outputDeviceId = CallStore.getOutputDeviceId();\n        const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n        this.setState({\n            devices,\n            outputDeviceId,\n            output,\n            inputAudioDeviceId,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo\n        });\n    };\n\n    handleOutputChange = event => {\n        const outputDeviceId = event.target.value;\n\n        this.setState({ outputDeviceId });\n    }\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { currentGroupCall } = CallStore;\n\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    handleOpenDeviceSelect = async type => {\n        switch (type) {\n            case 'inputAudio': {\n                const { inputAudio } = this.state;\n                if (!inputAudio.length) {\n                    return;\n                }\n                break;\n            }\n            case 'output': {\n                const { output } = this.state;\n                if (!output.length) {\n                    return;\n                }\n                break;\n            }\n        }\n\n        this.setState({\n            openDeviceSelect: { type }\n        });\n    };\n\n    handleCloseDeviceSelect = () => {\n        this.setState({\n            openDeviceSelect: null\n        });\n    };\n\n    handleSelectDevice = async (type, deviceId) => {\n        this.handleCloseDeviceSelect();\n\n        switch (type) {\n            case 'output': {\n                CallStore.setOutputDeviceId(deviceId);\n                this.setState({\n                    outputDeviceId: deviceId\n                });\n                break;\n            }\n            case 'inputAudio': {\n                const { currentGroupCall, currentCall } = CallStore;\n                if (currentGroupCall) {\n                    const { streamManager } = currentGroupCall;\n                    if (!streamManager) return;\n\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                    if (inputAudioStream) {\n                        inputAudioStream.getAudioTracks().forEach(t => {\n                            t.stop()\n                        });\n                    }\n\n                    const stream = await getStream({\n                        audio: { deviceId: { exact: deviceId } },\n                        video: false\n                    });\n\n                    this.setState({\n                        inputAudioDeviceId: deviceId,\n                        inputAudioStream: stream\n                    });\n                } else if (currentCall) {\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                    if (inputAudioStream) {\n                        inputAudioStream.getAudioTracks().forEach(t => {\n                            t.stop()\n                        });\n                    }\n\n                    const stream = await getStream({\n                        audio: { deviceId: { exact: deviceId } },\n                        video: false\n                    });\n\n                    this.setState({\n                        inputAudioDeviceId: deviceId,\n                        inputAudioStream: stream\n                    });\n                }\n                break;\n            }\n            case 'inputVideo': {\n                const { currentCall } = CallStore;\n                if (!currentCall) return;\n\n                const { inputVideoStream, inputVideoDeviceId } = this.state;\n\n                if (inputVideoDeviceId === deviceId && inputVideoStream) return;\n\n                if (inputVideoStream) {\n                    inputVideoStream.getVideoTracks().forEach(t => {\n                        t.stop()\n                    });\n                }\n\n                const stream = await getStream({\n                    audio: false,\n                    video: { deviceId: { exact: deviceId } }\n                });\n\n                this.setState({\n                    inputVideoDeviceId: deviceId,\n                    inputVideoStream: stream\n                });\n                break;\n            }\n        }\n    };\n\n    handleEnd = () => {\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        CallStore.leaveGroupCall(chatId, groupCallId, true);\n    };\n\n    handleMuteNewParticipants = () => {\n        const { groupCallId } = this.props;\n        const { muteNewParticipants } = this.state;\n\n        this.setState({\n            muteNewParticipants: !muteNewParticipants\n        });\n\n        CallStore.toggleMuteNewParticipants(groupCallId, !muteNewParticipants);\n    };\n\n    handleDone = async () => {\n        const { onClose } = this.props;\n        const { inputAudioDeviceId, inputAudioStream, inputVideoDeviceId, inputVideoStream } = this.state;\n\n        if (inputAudioStream && inputAudioDeviceId !== CallStore.getInputAudioDeviceId()) {\n            await CallStore.setInputAudioDeviceId(inputAudioDeviceId, inputAudioStream);\n        }\n\n        if (inputVideoStream && inputVideoDeviceId !== CallStore.getInputVideoDeviceId()) {\n            await CallStore.setInputVideoDeviceId(inputVideoDeviceId, inputVideoStream);\n        }\n\n        onClose && onClose();\n    };\n\n    handleCancel = () => {\n        const { onClose } = this.props;\n\n        onClose && onClose();\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const {\n            inputAudioDeviceId,\n            inputAudioStream,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideoStream,\n            inputVideo,\n            outputDeviceId,\n            output,\n            openDeviceSelect,\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        } = this.state;\n\n\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.deviceId || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\n\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.deviceId || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\n\n        const inputVideoDeviceInfo = inputVideo.find(x => x.deviceId === inputVideoDeviceId || !inputVideoDeviceId && x.deviceId === 'default');\n        const inputVideoString = !inputVideoDeviceInfo || inputVideoDeviceInfo.deviceId === 'default' || !inputVideoDeviceInfo.deviceId || !inputVideoDeviceInfo.label ? t('Default') : inputVideoDeviceInfo.label;\n\n        const { currentGroupCall } = CallStore;\n        const chatId = currentGroupCall ? currentGroupCall.chatId : 0;\n\n        const username = getChatUsername(chatId);\n\n        if (openDeviceSelect) {\n            const { type } = openDeviceSelect;\n            let items = [];\n            let deviceId = null;\n            switch (type) {\n                case 'output': {\n                    items = output;\n                    deviceId = outputDeviceId;\n                    break;\n                }\n                case 'inputAudio': {\n                    items = inputAudio;\n                    deviceId = inputAudioDeviceId;\n                    break;\n                }\n                case 'inputVideo': {\n                    items = inputVideo;\n                    deviceId = inputVideoDeviceId;\n                    break;\n                }\n            }\n\n            return (\n                <div className='group-call-settings-device-select'>\n                    <div className='group-call-settings-panel'>\n                        <div className='group-call-settings-panel-header'>\n                            <div className='group-call-panel-caption'>\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\n                            </div>\n                        </div>\n                        <div className='group-call-settings-panel-content'>\n                            {items.map(x => (\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\n                                    <div className='group-call-settings-panel-item-title'>{x.label || t('Default')}</div>\n                                </div>\n                            ))}\n                        </div>\n                        <div className='group-call-settings-panel-buttons'>\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\n                                {t('OK')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n\n\n        const canManage = canManageVoiceChats(chatId);\n        // console.log('[call][GroupCallSettings] render', muteNewParticipants, allowedChangeMuteNewParticipants);\n\n        return (\n            <div className='group-call-settings' onMouseDown={stopPropagation} onClick={this.handleCancel}>\n                <div className='group-call-settings-panel' onClick={stopPropagation}>\n                    <div className='group-call-settings-panel-header'>\n                        <div className='group-call-panel-caption'>\n                            <div className='group-call-title'>{t('Settings')}</div>\n                        </div>\n                    </div>\n                    <div className='group-call-settings-panel-content'>\n                        { canManage && allowedChangeMuteNewParticipants && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleMuteNewParticipants}>\n                                <div className='group-call-settings-panel-item-title'>{t('VoipGroupOnlyAdminsCanSpeak')}</div>\n                                <Switch\n                                    disableRipple\n                                    classes={{\n                                        root: 'group-call-settings-panel-switch-root',\n                                        switchBase: 'group-call-settings-panel-switch-base',\n                                        colorSecondary: 'group-call-settings-panel-switch-color-secondary',\n                                        checked: 'group-call-settings-panel-switch-checked',\n                                        track: 'group-call-settings-panel-switch-track'\n                                    }}\n                                    checked={muteNewParticipants}\n                                    onChange={this.handleMuteNewParticipants}/>\n                            </div>\n                        )}\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\n                        </div>\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\n                        </div>\n\n                        <GroupCallMicAmplitude stream={inputAudioStream}/>\n\n                        { callId && (\n                            <>\n                                <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputVideo')}>\n                                    <div className='group-call-settings-panel-item-title'>{t('Camera')}</div>\n                                    <div className='group-call-settings-panel-item-subtitle'>{inputVideoString}</div>\n                                </div>\n                                <CallSettingsVideoPreview stream={inputVideoStream}/>\n                                {/*<div>*/}\n                                {/*    <video id='call-settings-video' autoPlay={true} muted={true}/>*/}\n                                {/*</div>*/}\n                            </>\n                        )}\n                        { username && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\n                                {t('VoipGroupCopyInviteLink')}\n                            </div>\n                        )}\n                        { canManage && (\n                            <div className='group-call-settings-panel-item group-call-settings-panel-item-secondary' onClick={this.handleEnd}>\n                                {t('VoipGroupEndChat')}\n                            </div>\n                        )}\n                    </div>\n                    <div className='group-call-settings-panel-buttons'>\n                        <div className='group-call-settings-panel-done' onClick={this.handleDone}>\n                            {t('Done')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallSettings.propTypes = {\n    callId: PropTypes.number,\n    groupCallId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallSettings);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\n    'Mic'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\n    'MicOff'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CallIcon from '@material-ui/icons/Call';\nimport VideocamIcon from '@material-ui/icons/VideocamOutlined';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffOutlined';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallSettings from './GroupCallSettings';\nimport MenuIcon from '../../Assets/Icons/More';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { closeCallPanel } from '../../Actions/Call';\nimport { isFirefox } from '../../Calls/P2P/P2PSdpBuilder';\nimport { p2pGetCallStatus, p2pIsCallReady } from '../../Calls/Utils';\nimport { getUserFullName } from '../../Utils/User';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './CallPanel.css';\n\nconst SUPPORTS_ROTATION = true;\n\nclass CallPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.callPanelRef = React.createRef();\n\n        const { callId } = props;\n\n        this.state = {\n            openSettings: false,\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            fullScreen: false,\n\n            inputMediaState: CallStore.p2pGetMediaState(callId, 'input'),\n            outputMediaState: CallStore.p2pGetMediaState(callId, 'output')\n        };\n    }\n\n    componentDidMount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            const prefixes = ['', 'moz', 'webkit', 'ms']\n            prefixes.forEach(x => {\n                callPanel.addEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\n            });\n        }\n\n        CallStore.on('updateCall', this.handleUpdateCall);\n        CallStore.on('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\n    }\n\n    componentWillUnmount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            const prefixes = ['', 'moz', 'webkit', 'ms']\n            prefixes.forEach(x => {\n                callPanel.removeEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\n            });\n        }\n\n        CallStore.off('updateCall', this.handleUpdateCall);\n        CallStore.off('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\n    }\n\n    onClientUpdateCallMediaState = update => {\n        const { callId: currentCallId } = this.props;\n        const { callId, mediaState, type } = update;\n        if (callId !== currentCallId) return;\n\n        if (type === 'input') {\n            this.setState({ inputMediaState: mediaState });\n        } else {\n            this.setState({ outputMediaState: mediaState });\n        }\n    };\n\n    handleUpdateCall = update => {\n        this.forceUpdate();\n    };\n\n    handleFullScreenChange = () => {\n        this.setState({\n            fullScreen: this.isFullScreen()\n        });\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleAccept = async event => {\n        event.stopPropagation();\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        await CallStore.p2pAcceptCall(callId);\n    };\n\n    handleDiscard = async event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        closeCallPanel();\n        setTimeout(() => {\n            CallStore.p2pHangUp(callId, true);\n        }, 100);\n    };\n\n    handleOpenSettings = async event => {\n        this.handleCloseContextMenu();\n\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        this.handleDiscard(null);\n    };\n\n    handleShareScreen = () => {\n        this.handleCloseContextMenu();\n\n        const { currentCall } = CallStore;\n        if (!currentCall) return;\n\n        const { screenStream } = currentCall;\n        if (screenStream) {\n            CallStore.p2pStopScreenSharing();\n        } else {\n            CallStore.p2pStartScreenSharing();\n        }\n    };\n\n    handleFullScreen = () => {\n        this.handleCloseContextMenu();\n\n        setTimeout(() => {\n            if (this.isFullScreen()) {\n                this.exitFullscreen();\n                return;\n            }\n\n            this.requestFullscreen();\n        }, 250);\n    }\n\n    isFullScreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        return fullscreenElement === callPanel;\n    }\n\n    requestFullscreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const method = callPanel.requestFullscreen || callPanel.mozRequestFullScreen || callPanel.webkitRequestFullscreen;\n\n        method && method.call(callPanel);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { currentTarget } = event;\n\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { anchorEl } = this.state;\n\n        if (anchorEl) {\n            this.setState({ anchorEl: null });\n        } else {\n            this.setState({\n                anchorEl: currentTarget\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleAudio = () => {\n        const { inputMediaState } = this.state;\n        if (!inputMediaState) return;\n\n        const { muted } = inputMediaState;\n\n        CallStore.p2pAudioEnabled(muted);\n    };\n\n    handleVideo = () => {\n        const { inputMediaState } = this.state;\n        if (!inputMediaState) return;\n\n        const muted = inputMediaState.videoState === 'inactive';\n\n        CallStore.p2pVideoEnabled(muted)\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const { openSettings, anchorEl, fullScreen, inputMediaState, outputMediaState } = this.state;\n        const { currentCall } = CallStore;\n\n        const call = CallStore.p2pGet(callId);\n        if (!call) return null;\n\n        const { user_id: userId, is_outgoing, state } = call;\n\n        let screenSharing = currentCall && Boolean(currentCall.screenStream);\n\n        let outputVideoStyle = null;\n        if (SUPPORTS_ROTATION && outputMediaState && isFirefox()) {\n            outputVideoStyle = {\n                transform: `rotate(${outputMediaState.videoRotation}deg)`\n            };\n        }\n\n        return (\n            <div className={classNames('group-call-panel', { 'full-screen': fullScreen })} ref={this.callPanelRef}>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption' onMouseDown={stopPropagation} onClick={stopPropagation}>\n                        <div className='group-call-title'>{getUserFullName(userId, null)}</div>\n                        <div className='group-call-join-panel-subtitle'>\n                            {p2pGetCallStatus(callId)}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleOpenContextMenu}>\n                        <MenuIcon />\n                    </div>\n                    <Popover\n                        container={this.callPanelRef.current}\n                        classes={{\n                            paper: 'group-call-participant-menu-root'\n                        }}\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={this.handleCloseContextMenu}\n                        getContentAnchorEl={null}\n                        disableRestoreFocus={true}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleOpenSettings}>\n                                <ListItemText primary={t('Settings')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleFullScreen}>\n                                <ListItemText primary={fullScreen ? t('ExitFullScreen') : t('EnterFullScreen')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleShareScreen}>\n                                <ListItemText primary={screenSharing ? t('StopScreenSharing') : t('StartScreenSharing')} />\n                            </MenuItem>\n                        </MenuList>\n                    </Popover>\n                </div>\n                <div className='call-panel-content scrollbars-hidden' onDoubleClick={this.handleFullScreen}>\n                    <video id='call-output-video' style={outputVideoStyle} className={outputMediaState && outputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={false}/>\n                    <video id='call-input-video' className={inputMediaState && inputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={true}/>\n                </div>\n                { outputMediaState && outputMediaState.muted && (\n                    <div className='call-panel-microphone-hint'>\n                        <div className='call-panel-microphone-hint-wrapper'>\n                            <MicOffIcon/>\n                            <div className='call-panel-microphone-hint-text'>\n                                {LStore.formatString('VoipUserMicrophoneIsOff', getUserFullName(userId, null))}\n                            </div>\n                        </div>\n                    </div>\n                )}\n                <div className='group-call-panel-buttons'>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleVideo}>\n                            {inputMediaState && inputMediaState.videoState === 'active' ? <VideocamIcon/> : <VideocamOffIcon/>}\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {inputMediaState && inputMediaState.videoState === 'active' ? t('VoipStopVideo') : t('VoipStartVideo')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleDiscard}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {(p2pIsCallReady(callId) || is_outgoing) ? t('VoipEndCall') : t('VoipDeclineCall')}\n                        </div>\n                    </div>\n                    {!is_outgoing && state['@type'] === 'callStatePending' && (\n                        <div className='group-call-panel-button'>\n                            <div className='group-call-panel-button-answer' onMouseDown={stopPropagation} onClick={this.handleAccept}>\n                                <CallIcon />\n                            </div>\n                            <div className='group-call-panel-button-text'>\n                                {t('VoipAnswerCall')}\n                            </div>\n                        </div>\n                    )}\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleAudio}>\n                            {inputMediaState && !inputMediaState.muted ? <MicIcon/> : <MicOffIcon/>}\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {inputMediaState && !inputMediaState.muted ? t('Mute') : t('Unmute')}\n                        </div>\n                    </div>\n                </div>\n                {openSettings && <GroupCallSettings callId={callId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nCallPanel.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default withTranslation()(CallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CallPanel from './CallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass Call extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { callId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <CallPanel callId={callId}/>\n            </div>\n        )\n    }\n}\n\nCall.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default Call;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {isPrivateChat(chatId) && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\n                                                </Typography>\n                                            }\n                                            secondary={t('Phone')}\n                                        />\n                                    </ListItem>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    onUpdateMessageSendAcknowledged = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ sendingState: null });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === 0) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 50);\n    setTimeout(() => {\n        element.scrollTo({ top: 0, behavior });\n    }, 1);\n}\n\nexport function scrollBottom(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === element.scrollHeight - element.offsetHeight) return;\n\n    element.scrollTop = Math.max(element.scrollTop, element.scrollHeight - element.offsetHeight - 50);\n    setTimeout(() => {\n        element.scrollTo({ top: element.scrollHeight - element.offsetHeight, behavior });\n    }, 1);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport {\n    STORAGE_CACHE_KEY,\n    STORAGE_CACHE_TEST_KEY,\n    STORAGE_CONTACTS_KEY,\n    STORAGE_CONTACTS_TEST_KEY,\n    STORAGE_FILES_KEY,\n    STORAGE_FILES_TEST_KEY,\n    STORAGE_FILTERS_KEY,\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\n} from '../Constants';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        const { useTestDC } = TdLibController.parameters;\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000, {\n            leading: false,\n            trailing: true\n        });\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove(this.cacheKey);\n                        CacheManager.remove(this.filesKey);\n                        if (this.cacheContacts) {\n                            CacheManager.remove(this.contactsKey);\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        const promises = [];\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n        // console.log('[f] cache.load', files);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[f] cache.parse', cache.files);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        // console.log('[cm] save');\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal');\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save(this.cacheKey, cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        const results = await Promise.all(promises);\n        await CacheManager.save(this.filesKey, results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save(this.contactsKey, contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save(this.filtersKey, this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\n\n        Promise.all(promises);\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport { openSupportChat } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n\n        openSupportChat();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div className='search-input-wrapper'>\n                    {showIcon && <SearchIcon className='search-input-icon' />}\n                    <div\n                        id='search-inputbox'\n                        ref={inputRef}\n                        placeholder={hint || t('Search')}\n                        contentEditable\n                        suppressContentEditableWarning\n                        onKeyDown={this.handleKeyDown}\n                        onKeyUp={this.handleKeyUp}\n                        onPaste={this.handlePaste}\n                        onInput={this.handleInput}\n                        onFocus={onFocus}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport { openChatList } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListMain' });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        if (chatListEquals(this.state.chatList, chatList)) {\n            this.scrollToTop();\n        } else {\n            this.setState({\n                chatList,\n                params: {\n                    loading: false,\n                    completed: false\n                }\n            }, () => {\n                this.loadFirstSlice();\n            });\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        if (this.stub) return;\n\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const list = current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source, stub = false) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        if (stub) {\n            return <DialogPlaceholder key={index} index={index} />\n        }\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        this.source = [];\n        this.stub = false;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                this.source = Array.from(Array(10));\n                this.stub = true;\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    cacheItems: PropTypes.array,\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    handleClick = () => {\n        const { innerListRef } = this.props;\n        if (!innerListRef) return;\n\n        const { current: list } = innerListRef;\n        if (!list) return;\n\n        list.scrollToTop();\n    };\n\n    render() {\n        const { t, innerListRef, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\n\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current.cropper;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\nimport { scrollBottom } from '../../../Utils/DOM';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput wrapperRef={this.searchRef} inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\n        try {\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\n            type = themeOptions.type;\n            primary = themeOptions.primary;\n        } catch {}\n\n        this.state = {\n            open: false,\n            type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        const type = event.target.value;\n\n        this.setState({ type });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                disableEnforceFocus={true}\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label='System Default' />\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { isMacOS } from '../../../Utils/Common';\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false,\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    async handleSetOption(command) {\n        let value = false;\n        switch (command) {\n            case 'sendByCtrlEnter': {\n                value = true;\n                break;\n            }\n            case 'sendByEnter': {\n                value = false;\n                break;\n            }\n        }\n\n        await TdLibController.send({\n            '@type': 'setOption',\n            name: SEND_BY_CTRL_ENTER_KEY,\n            value: { '@type': 'optionValueBoolean', value }\n        });\n\n        this.setState({\n            sendByCtrlEnter: value\n        });\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Theme')} />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={!sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('SendByEnter')}\n                                secondary={t('NewLineByShiftEnter')}\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\n                                secondary={t('NewLineByEnter')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions, t } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport { unblockSender } from '../../../Actions/Message';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SectionHeader from '../SectionHeader';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacyCalls.css';\n\nclass PrivacyCalls extends React.Component {\n    state = {\n        prevAllowCalls: null,\n        prevAllowP2PCalls: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { allowCalls, allowP2PCalls } = props;\n        const { prevAllowCalls, prevAllowP2PCalls } = state;\n        if (allowCalls !== prevAllowCalls || allowP2PCalls !== prevAllowP2PCalls) {\n            const allowCallsValue = allowCalls.rules.find(x =>\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\n\n            const allowP2PCallsValue = allowP2PCalls.rules.find(x =>\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\n\n            return {\n                prevAllowCalls: allowCalls,\n                prevAllowP2PCalls: allowP2PCalls,\n                allowCallsValue: allowCallsValue ? allowCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll',\n                allowP2PCallsValue: allowP2PCallsValue ? allowP2PCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll'\n            }\n        }\n\n        return null;\n    }\n\n    componentWillUnmount() {\n        this.setSettings();\n    }\n\n    setSettings() {\n        const { allowCalls, allowP2PCalls } = this.props;\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\n\n        const prevAllowCallsValue = allowCalls.rules.find(x =>\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\n        if (!prevAllowCallsValue || allowCallsValue !== prevAllowCallsValue['@type']) {\n            let added = false;\n            const rules = {\n                '@type': 'userPrivacySettingRules',\n                rules: allowCalls.rules.map(x => {\n                    if (x['@type'] === prevAllowCallsValue['@type']) {\n                        added = true;\n                        return { '@type': allowCallsValue }\n                    } else {\n                        return x;\n                    }\n                })\n            }\n\n            if (!added) {\n                rules.rules.push({ '@type': allowCallsValue });\n            }\n\n            TdLibController.send({\n                '@type': 'setUserPrivacySettingRules',\n                setting: { '@type': 'userPrivacySettingAllowCalls' },\n                rules\n            });\n        }\n\n        const prevAllowP2PCallsValue = allowP2PCalls.rules.find(x =>\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\n        if (!prevAllowP2PCallsValue || allowP2PCallsValue !== prevAllowP2PCallsValue['@type']) {\n            let added = false;\n            const rules = {\n                '@type': 'userPrivacySettingRules',\n                rules: allowP2PCalls.rules.map(x => {\n                    if (x['@type'] === prevAllowP2PCallsValue['@type']) {\n                        added = true;\n                        return { '@type': allowP2PCallsValue }\n                    } else {\n                        return x;\n                    }\n                })\n            }\n\n            if (!added) {\n                rules.rules.push({ '@type': allowP2PCallsValue });\n            }\n\n            TdLibController.send({\n                '@type': 'setUserPrivacySettingRules',\n                setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' },\n                rules\n            });\n        }\n    }\n\n    handleChangeAllowCalls = event => {\n        this.setState({\n            allowCallsValue: event.currentTarget.value\n        });\n    };\n\n    handleChangeAllowP2PCalls = event => {\n        this.setState({\n            allowP2PCallsValue: event.currentTarget.value\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Calls')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('WhoCanCallMe')}</SectionHeader>\n                        <RadioGroup aria-label='' name='' value={allowCallsValue} onChange={this.handleChangeAllowCalls}>\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\n                        </RadioGroup>\n\n                        <SectionHeader>{t('PrivacyP2P')}</SectionHeader>\n                        <RadioGroup aria-label='' name='' value={allowP2PCallsValue} onChange={this.handleChangeAllowP2PCalls}>\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\n                        </RadioGroup>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nPrivacyCalls.propTypes = {\n    allowCalls: PropTypes.object.isRequired,\n    allowP2PCalls: PropTypes.object.isRequired,\n};\n\nexport default withTranslation()(PrivacyCalls);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\nimport PrivacyCalls from './PrivacyCalls';\nimport { CallOutlined } from '@material-ui/icons';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        openActiveSessions: false,\n\n        users: null,\n        openBlockedUsers: false,\n\n        allowCalls: null,\n        allowP2PCalls: null,\n        openCalls: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getUserPrivacySettingRules',\n            setting: { '@type': 'userPrivacySettingAllowCalls' }\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getUserPrivacySettingRules',\n            setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' }\n        }).catch(() => null));\n\n        const [ sessions, users, allowCalls, allowP2PCalls ] = await Promise.all(promises);\n\n        this.setState({\n            sessions,\n            users,\n            allowCalls,\n            allowP2PCalls\n        });\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    openCalls = () => {\n        const { allowCalls, allowP2PCalls } = this.state;\n        if (!allowCalls || !allowP2PCalls) return;\n\n        this.setState({\n            openCalls: true\n        });\n    };\n\n    closeCalls = () => {\n        this.setState({\n            openCalls: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const {\n            openBlockedUsers, users,\n            openActiveSessions, sessions,\n            openCalls, allowCalls, allowP2PCalls\n        } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openCalls}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <CallOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('Calls')}\n                                secondary={''}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n                <SidebarPage open={openCalls} onClose={this.closeCalls}>\n                    <PrivacyCalls allowCalls={allowCalls} allowP2PCalls={allowP2PCalls} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile || defaultPhoto) {\n            const photo = defaultPhotoFile\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputChatPhotoStatic', photo }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\nimport { scrollBottom } from '../../Utils/DOM';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile || defaultPhoto) {\n                const photo = defaultPhotoFile\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        {/*<UpdatePanel />*/}\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n    };\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const { chatSelectOptions } = AppStore;\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\n            return;\n        }\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter+cmd, enter+ctrl\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                } else {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n\n        // const { text, position } = this.getTextAndCaretPosition();\n        // this.searchUsernameOrHashtag(text, position, [], false);\n    };\n\n    getTextAndCaretPosition = () => {\n        const { current: input } = this.newMessageRef;\n        if (!input) return;\n\n        input.focus()\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(input);\n        range.setEnd(_range.endContainer, _range.endOffset);\n\n        return { text: input.innerText, position: range.toString().length };\n    };\n\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\n        const { chatId } = this.state;\n\n        const searchResultUsernames = [];\n\n        if (this.cancelDelayRunnable) {\n            clearTimeout(this.cancelDelayRunnable);\n            this.cancelDelayRunnable = null;\n        }\n\n        const info = getChatFullInfo(chatId);\n        const needUsernames = true;\n        const needBotContext = true;\n\n        const now = Date.now();\n        this.now = now;\n\n        let searchPosition = position;\n        if (text.length > 0) {\n            searchPosition--;\n        }\n\n        this.lastText = text;\n        this.lastUsernameOnly = usernameOnly;\n\n        let foundType = -1;\n        let result = '';\n        let resultStartPosition;\n        let resultLength;\n\n        let dogPosition = -1;\n        if (usernameOnly) {\n            result += text.substring(1);\n            resultStartPosition = 0;\n            resultLength = result.length;\n            foundType = 0;\n        } else {\n            for (let i = searchPosition; i >= 0; i--) {\n                if (i >= text.length){\n                    continue;\n                }\n                let ch = text[i];\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\n                    if (ch === '@') {\n                        if (needUsernames || needBotContext && i === 0){\n                            if (!info && i !== 0) {\n                                this.lastText = text;\n                                this.lastPosition = position;\n                                this.messages = messages;\n                                this.closeHints(now);\n                                return;\n                            }\n                            dogPosition = i;\n                            foundType = 0;\n                            resultStartPosition = i;\n                            resultLength = result.length + 1;\n                        }\n                    }\n                }\n\n                result = ch + result;\n            }\n        }\n\n        if (foundType === -1) {\n            this.closeHints(now);\n            return;\n        }\n\n        if (foundType === 0) {\n            const users = [];\n            const usersMap = new Map();\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\n                const { sender } = messages[i];\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\n                    usersMap.set(sender.user_id, sender.user_id);\n                    users.push(sender.user_id);\n                }\n            }\n\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\n            const hasSpace = usernameString.indexOf(' ') >= 0;\n            const newResult = [];\n            const newResultsMap = new Map();\n            const newMap = new Map();\n\n            const inlineBots = [];\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\n\n            }\n\n            const chat = ChatStore.get(chatId);\n            if (chat && info && info.members) {\n                for (let i = -1; i < info.members.length; i++) {\n                    let username;\n                    let firstName;\n                    let lastName;\n                    let object;\n                    let id;\n                    if (i === -1) {\n                        if (!usernameString.length) {\n                            newResult.push(chat);\n                            continue;\n                        }\n                        firstName = chat.title;\n                        lastName = '';\n                        username = chat.username;\n                        object = chat;\n                        id = -chat.id;\n                    } else {\n                        const { user_id } = info.members[i];\n                        const user = UserStore.get(user_id);\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\n                            continue;\n                        }\n                        if (!usernameString.length) {\n                            if (!isDeletedUser(user_id)) {\n                                newResult.push(user);\n                                continue;\n                            }\n                        }\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        username = user.username;\n                        object = user;\n                        id = user.id;\n                    }\n\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\n                        newResult.push(object);\n                        newMap.set(id, object);\n                    }\n                }\n            }\n\n            if (isSupergroup(chatId) && usernameString.length > 0) {\n                if (newResult.length < 5) {\n                    this.cancelDelayRunnable = setTimeout(() => {\n                        this.cancelDelayRunnable = null;\n                        this.showUsersResult(now, newResult, newMap, true);\n                    }, 0);\n                } else {\n                    this.showUsersResult(now, newResult, newMap, true);\n                }\n\n                setTimeout(async () => {\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const result = await TdLibController.send({\n                        '@type': 'searchChatMembers',\n                        chat_id: chatId,\n                        query: usernameString,\n                        limit: 20,\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\n                    });\n\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const { members } = result;\n                    if (members.length > 0) {\n                        for (let i = 0; i < members.length; i++) {\n                            const { user_id } = members[i];\n                            if (isMeUser(user_id)) {\n                                continue;\n                            }\n                            const user = UserStore.get(user_id);\n                            if (!user) {\n                                continue;\n                            }\n\n                            searchResultUsernames.push(user);\n                        }\n\n                        this.notifyDataSetChanged(now, searchResultUsernames);\n                    }\n\n\n                }, 200);\n            } else {\n                this.showUsersResult(now, newResult, newMap, true);\n            }\n        }\n    }\n\n    notifyDataSetChanged(id, searchResultUsernames) {\n        console.log('[search] global', searchResultUsernames);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsGlobal',\n            id,\n            global: searchResultUsernames\n        });\n    }\n\n    showUsersResult(id, newResult, newMap, notify) {\n        console.log('[search] local', newResult);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsLocal',\n            id,\n            local: newResult\n        });\n    }\n\n    closeHints(id) {\n        console.log('[search] close');\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsClose',\n            id\n        });\n    }\n\n    openHints() {\n\n    }\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const { is_blocked, last_message } = chat;\n\n                return {\n                    prevChatId: chatId,\n\n                    isBlocked: is_blocked,\n                    hasLastMessage: Boolean(last_message)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId, options } = this.props;\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.options !== options) {\n            return true;\n        }\n\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.hasLastMessage !== hasLastMessage) {\n            return true;\n        }\n\n        if (nextState.isBlocked !== isBlocked) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        this.setState({\n            clearHistory: update.inProgress\n        });\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chat_id, last_message } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            hasLastMessage: Boolean(last_message)\n        });\n    };\n\n    onUpdateChatIsBlocked = update => {\n        const { chat_id, is_blocked } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            isBlocked: is_blocked\n        });\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    handleUnblock = () => {\n        const { chatId } = this.props;\n\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\n    };\n\n    handleStartBot = async () => {\n        const { chatId, options } = this.props;\n\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n        if (options && options.botStartMessage) {\n            const { botUserId, parameter } = options.botStartMessage;\n\n            await sendBotStartMessage(chatId, botUserId, parameter);\n        } else {\n            await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: 0,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: '/start',\n                        entities: []\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: true\n                }\n            });\n        }\n    };\n\n    render() {\n        const { chatId, options, t } = this.props;\n        const { hasLastMessage, clearHistory } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type, is_blocked } = chat;\n        if (!type) return null;\n\n        if (is_blocked) {\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\n        }\n\n        if (options && options.botStartMessage) {\n            const isBot = isBotChat(chatId);\n            if (isBot) {\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n            }\n        }\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypeSecret':\n            case 'chatTypePrivate': {\n                const isBot = isBotChat(chatId);\n                if (isBot && (!hasLastMessage || clearHistory)) {\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n                }\n\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const MAX_SPEED = 8.2;\nexport const MIN_SPEED = 0.8;\nexport const AMPLITUDE_SPEED = 0.33;\n\nexport const SCALE_BIG = 0.807;\nexport const SCALE_SMALL = 0.704;\n\nexport const SCALE_BIG_MIN = 0.878;\nexport const SCALE_SMALL_MIN = 0.926;\n\nexport const FORM_BIG_MAX = 0.6;\nexport const FORM_SMALL_MAX = 0.6;\n\nexport const GLOBAL_SCALE = 1;\n\nexport const FORM_BUTTON_MAX = 0;\n\nexport const GRADIENT_SPEED_MIN = 0.5;\nexport const GRADIENT_SPEED_MAX = 0.01;\n\nexport const LIGHT_GRADIENT_SIZE = 0.5;\n\nfunction rotateZ(x, y, angle, originX, originY) {\n    x -= originX;\n    y -= originY;\n\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\n\n    x = X + originX;\n    y = Y + originY;\n\n    return [x, y];\n}\n\nexport default class BlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.cubicBezierK = 1.0;\n        this.N = n;\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\n        this.radius = new Array(n);\n        this.angle = new Array(n);\n\n        this.radiusNext = new Array(n);\n        this.angleNext = new Array(n);\n        this.progress = new Array(n);\n        this.speed = new Array(n);\n\n        this.pointStart = new Array(4);\n        this.pointEnd = new Array(4);\n\n        for (let i = 0; i < this.N; i++) {\n            this.generateBlob(this.radius, this.angle, i);\n            this.generateBlob(this.radiusNext, this.angleNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, angle, i) {\n        const { maxRadius, minRadius, speed, N } = this;\n\n        const angleDif = 2 * Math.PI / N * 0.05;\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\n        for (let i = 0; i < N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                angle[i] = angleNext[i];\n                this.generateBlob(radiusNext, angleNext, i);\n            }\n        }\n    }\n\n    draw(cX, cY, canvas, paint) {\n        // console.log('[bd] draw', cX, cY, canvas, paint);\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\n\n            for (let i = 0; i < N; i++) {\n                const progress = this.progress[i];\n                const nextIndex = i + 1 < N ? i + 1 : 0;\n                const progressNext = this.progress[nextIndex];\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\n\n                pointStart[0] = cX;\n                pointStart[1] = cY - r1;\n                pointStart[2] = cX + l;\n                pointStart[3] = cY - r1;\n\n                this.mapPoints(pointStart, cX, cY, angle1);\n\n                pointEnd[0] = cX;\n                pointEnd[1] = cY - r2;\n                pointEnd[2] = cX - l;\n                pointEnd[3] = cY - r2;\n\n                this.mapPoints(pointEnd, cX, cY, angle2);\n\n                if (i === 0) {\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\n                    ctx.moveTo(pointStart[0], pointStart[1]);\n                }\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\n                ctx.bezierCurveTo(\n                    pointStart[2], pointStart[3],\n                    pointEnd[2], pointEnd[3],\n                    pointEnd[0], pointEnd[1]\n                );\n            }\n\n            // ctx.scale(1.0, 1.0);\n            // this.fillStyleFunc(ctx);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n\n    mapPoints(points, cX, cY, angle) {\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\n\n        points[0] = result1[0];\n        points[1] = result1[1];\n        points[2] = result2[0];\n        points[3] = result2[1];\n    }\n\n    generateInitBlob() {\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\n\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, angle, i);\n            this.generateBlob(radiusNext, angleNext, i);\n            progress[i] = 0;\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// const MIN_SPEED = 0.8;\n// const MAX_SPEED = 8.2;\n\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\n\nexport default class LineBlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.N = n;\n        this.radius = new Array(n + 1);\n\n        this.radiusNext = new Array(n + 1);\n        this.progress = new Array(n + 1);\n        this.speed = new Array(n + 1);\n\n        for (let i = 0; i <= n; i++) {\n            this.generateBlob(this.radius, i);\n            this.generateBlob(this.radiusNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, i) {\n        const { maxRadius, minRadius, speed } = this;\n\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    generateNextBlob() {\n        const { radius, radiusNext, progress, N } = this;\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, i);\n            this.generateBlob(radiusNext, i);\n            progress[i] = 0.0;\n        }\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext } = this;\n        for (let i = 0; i <= N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                this.generateBlob(radiusNext, i);\n            }\n        }\n    }\n\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n            ctx.moveTo(right, bottom);\n            ctx.lineTo(left, bottom);\n\n            const { radius, radiusNext, N } = this;\n            for (let i = 0; i <= N; i++) {\n                if (i === 0) {\n                    const progress = this.progress[i];\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.lineTo(left, y);\n                } else {\n                    const progress = this.progress[i - 1];\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\n                    const progressNext = this.progress[i];\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\n                    const x1 = (right - left) / N * (i - 1);\n                    const x2 = (right - left) / N * i;\n                    const cx = x1 + (x2 - x1) / 2;\n\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.bezierCurveTo(\n                        cx, y1,\n                        cx, y2,\n                        x2, y2\n                    );\n                    if (i === N) {\n                        ctx.lineTo(right, bottom);\n                    }\n                }\n            }\n\n            // ctx.scale(1.0, 1.0);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LineBlobDrawable from './LineBlobDrawable';\n\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\nexport const MUTE_BUTTON_STATE_MUTE = 1;\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\n\nexport class WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.6, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            gradient.addColorStop(0, '#00B1C0');\n            gradient.addColorStop(1, '#52CE5D');\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            gradient.addColorStop(0, '#2BCEFF');\n            gradient.addColorStop(1, '#0976E3');\n        } else {\n            gradient.addColorStop(0, '#8599aa');\n            gradient.addColorStop(1, '#8599aa');\n        }\n\n        return gradient;\n    }\n\n    update(height, width, dt, amplitude) {\n        // TODO: move gradient here\n    }\n}\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.resizing = false;\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n        this.amplitude2 = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.prevState = null;\n        this.currentState = this.states[MUTE_BUTTON_STATE_CONNECTING];\n        this.progressToState = 1.0;\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.right = 1260 * this.scale;\n        this.bottom = 63 * this.scale;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        window.addEventListener('resize', this.handleResize);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n        const topBar = document.getElementById('top-bar');\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n\n        this.canvas = document.getElementById('canvas');\n        this.lbd = new LineBlobDrawable(3);\n        this.lbd1 = new LineBlobDrawable(7);\n        this.lbd2 = new LineBlobDrawable(8);\n        this.setAmplitude(this.amplitude);\n\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        window.removeEventListener('resize', this.handleResize);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.bottom = 63 * this.scale;\n\n        const topBar = document.getElementById('top-bar');\n        if (!topBar) return;\n\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n    }\n\n    handleResize = () => {\n        if (this.resizeHandler) {\n            clearTimeout(this.resizeHandler);\n            this.resizeHandler = null;\n        }\n\n        this.resizing = true;\n        this.resizeCanvas();\n        this.resizeHandler = setTimeout(() => {\n            this.resizing = false;\n            this.invokeDraw();\n        }, 250);\n    }\n\n    resizeCanvas() {\n        const topBar = document.getElementById('top-bar');\n\n        this.scale = window.devicePixelRatio;\n        this.right = topBar.offsetWidth * this.scale;\n\n        this.forceUpdate();\n        this.invokeDraw();\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\n        if (!focused && !resizing && this.progressToState >= 1.0) {\n            return;\n        }\n\n        // console.log('[top] draw', [focused, resizing, this.mounted]);\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude += this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (this.animateToAmplitude !== this.amplitude2) {\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\n            if (this.animateAmplitudeDiff2 > 0) {\n                if (this.amplitude2 > this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude2 < this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (previousState) {\n            this.progressToState += dt / 250;\n            if (this.progressToState > 1) {\n                this.progressToState = 1;\n                this.previousState = null;\n            }\n        }\n\n        const top1 = 6 * this.amplitude2 * scale;\n        const top2 = 6 * this.amplitude2 * scale;\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        lbd.minRadius = 0;\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\n        lbd1.minRadius = 0;\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\n        lbd2.minRadius = 0;\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\n\n        lbd.update(this.amplitude, 0.3);\n        lbd1.update(this.amplitude, 0.7);\n        lbd2.update(this.amplitude, 0.7);\n\n        for (let i = 0; i < 2; i++) {\n            if (i === 0 && !previousState) {\n                continue;\n            }\n\n            let alpha = 1;\n            let state = null;\n            if (i === 0) {\n                alpha = 1 - this.progressToState;\n                state = previousState;\n                // previousState.setToPaint(paint);\n            } else {\n                alpha = previousState ? this.progressToState : 1;\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\n                state = currentState;\n                // currentState.setToPaint(paint);\n            }\n\n            const paint1 = ctx => {\n                ctx.globalAlpha = 0.3 * alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n            const paint = ctx => {\n                ctx.globalAlpha = i === 0? 1 : alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\n    }\n\n    render() {\n        const { left, right, top, bottom, scale } = this;\n\n        return(\n            <div id='top-bar' className='top-bar'>\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n            </div>\n        );\n    }\n}\n\nTopBar.propTypes = {};\n\nexport default TopBar;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport TopBar, { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { openGroupCallPanel } from '../../Actions/Call';\nimport { showSnackbar } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallTopPanel.css';\n\nclass GroupCallTopPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.topBarRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { call, status, connected, animated } = this.state;\n\n        if (nextState.call !== call) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.connected !== connected) {\n            return true;\n        }\n\n        if (nextState.animated !== animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n        this.topBarRef.current && this.topBarRef.current.setCurrentState(stateId, animated);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes, type } = update;\n        if (!amplitudes.length) return;\n\n        let max = 0;\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            max = value > max ? value : max;\n        }\n\n        if (type !== 'input') {\n            this.topBarRef.current && this.topBarRef.current.setAmplitude(max);\n        }\n    };\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        }, () => {\n            this.switchButtonState(true);\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.saveMessagesScrollPosition();\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.restoreMessagesScrollPosition(Boolean(call));\n            this.switchButtonState(true);\n        });\n    };\n\n    saveMessagesScrollPosition() {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const prevOffsetHeight = list.offsetHeight;\n            const prevScrollTop = list.scrollTop;\n\n            list.prevOffsetHeight = prevOffsetHeight;\n            list.prevScrollTop = prevScrollTop;\n        });\n    }\n\n    restoreMessagesScrollPosition(openPanel = true) {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const { prevScrollTop, prevOffsetHeight } = list;\n            if (list.scrollTop === prevScrollTop) {\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\n            }\n        });\n    }\n\n    handleMicrophone = async event => {\n        event.stopPropagation();\n\n        const { call, status } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\n                return (\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => { closeSnackbar(snackKey); }}>\n                        <CloseIcon />\n                    </IconButton>\n                )\n            });\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenGroupCall = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        openGroupCallPanel();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { call, status, connected, animated } = this.state;\n        if (!call) return null;\n\n        const { chatId } = call;\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\n\n        return (\n            <div className='group-call-top-panel-wrapper'>\n                { animated ? (\n                    <TopBar ref={this.topBarRef}/>\n                    ) : (\n                    <div className={classNames('group-call-top-panel',\n                        {\n                            'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-top-panel-unmuted': connected && status === 'unmuted',\n                            'group-call-top-panel-connecting': !connected,\n\n                        })}\n                    />\n                )}\n                <div className='group-call-top-panel-buttons' onClick={this.handleOpenGroupCall}>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\n                        {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\n                    </IconButton>\n                    <div className='group-call-top-panel-title'>\n                        {title}\n                    </div>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\n                        <CallEndIcon fontSize='small' />\n                    </IconButton>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nGroupCallTopPanel.propTypes = {};\n\nexport default withTranslation()(GroupCallTopPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\n    'Block'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\n    'Phone'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport BlockIcon from '../../Assets/Icons/Block';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport PhoneIcon from '../../Assets/Icons/Phone';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport {\n    canClearHistory,\n    canDeleteChat,\n    getViewInfoTitle,\n    isPrivateChat,\n    getDeleteChatTitle,\n    hasOnePinnedMessage,\n    canSwitchBlocked,\n    getChatSender,\n    canManageVoiceChats,\n    canBeReported, getChatUserId, canBeCalled\n} from '../../Utils/Chat';\nimport { clearHistory, leaveChat, openReportChat } from '../../Actions/Chat';\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null\n        };\n    }\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    handleSwitchBlocked = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const sender = getChatSender(chatId);\n        const { is_blocked } = chat;\n        if (is_blocked) {\n            unblockSender(sender);\n        } else {\n            requestBlockSender(sender);\n        }\n    };\n\n    handleStartGroupCall = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        showAlert({\n            title: LStore.getString('StartVoipChatTitle'),\n            message: LStore.getString('StartVoipChatAlertText'),\n            ok: LStore.getString('Start'),\n            cancel: LStore.getString('Cancel'),\n            onResult: async result => {\n                if (result){\n                    await CallStore.startGroupCall(chatId);\n                }\n            }\n        })\n    };\n\n    handleStartP2PCall = () => {\n        this.handleMenuClose();\n\n        const userId = getChatUserId(AppStore.getChatId());\n\n        CallStore.p2pStartCall(userId, false);\n    };\n\n    handleReport = () => {\n        this.handleMenuClose();\n\n        const { chatId } = this.props;\n\n        openReportChat(chatId, []);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_blocked, voice_chat_group_call_id } = chat;\n\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n        const switchBlocked = canSwitchBlocked(chatId);\n        const manageVoiceChats = canManageVoiceChats(chatId);\n        const reported = canBeReported(chatId);\n        const called = canBeCalled(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    { CallStore.p2pCallsEnabled && called && (\n                        <MenuItem onClick={this.handleStartP2PCall}>\n                            <ListItemIcon>\n                                <CallOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Call')} />\n                        </MenuItem>\n                    )}\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\n                        <MenuItem onClick={this.handleStartGroupCall}>\n                            <ListItemIcon>\n                                <PhoneIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('StartVoipChat')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                    {switchBlocked && (\n                        <MenuItem onClick={this.handleSwitchBlocked}>\n                            <ListItemIcon>\n                                <BlockIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\n                        </MenuItem>\n                    )}\n                    {reported && (\n                        <MenuItem onClick={this.handleReport}>\n                            <ListItemIcon>\n                                <ReportOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ReportChat')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown, animateOnMount } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown, animateOnMount);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown, animate = true) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = !animate ? '0ms' : '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height, getItemTemplate } = this.props;\n        const { from, to } = this.state;\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{getItemTemplate(to)}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? getItemTemplate(to) : getItemTemplate(from) }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? getItemTemplate(from) : getItemTemplate(to) }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    getItemTemplate: PropTypes.func,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number,\n    animateOnMount: PropTypes.bool\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    getItemTemplate: x => x,\n    scrollDown: true,\n    height: 21,\n    animateOnMount: true\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport { canBeReported } from '../../Utils/Chat';\nimport { openReportChat } from '../../Actions/Chat';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        forwardMessages(id, messageIds);\n    };\n\n    handleReport = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        openReportChat(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const items = Array.from(MessageStore.selectedItems.values());\n        const canReport = canBeReported(items.length > 0 ? items[0].chatId : 0);\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canReport && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleReport}>\n                        {t('ReportChat')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.state = {\n            chatId,\n            pinned,\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState()\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    setPinnedState() {\n        const { chatId } = this.state;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({ pinned });\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({\n            chatId,\n            pinned\n        });\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handlePinClick = () => {\n        const { chatId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            pinned,\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <div className='header-right-buttons'>\n                                { pinned.length > 1 && (\n                                    <IconButton\n                                        aria-label='Pins'\n                                        onClick={this.handlePinClick}\n                                        onMouseDown={this.handleMouseDown}>\n                                        <PlaylistEditIcon />\n                                    </IconButton>\n                                )}\n                                <IconButton\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\nimport { requestBlockSender } from '../../Actions/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarInviteMembers': {\n                break;\n            }\n        }\n        if (!content) {\n            return null;\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        const hasItems =\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\n        if (!hasItems) {\n            return null;\n        }\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews, isCallMessage } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        const isCall = isCallMessage(chatId, messageId);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && !isCall && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport './GroupCallJoinPanelSubtitle.css';\n\nclass GroupCallJoinPanelSubtitle extends React.Component {\n    state = {\n        participantCount: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participantCount } = this.state;\n\n        if (nextState.participantCount !== participantCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            let participantCount = 0;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const { participant_count } = groupCall;\n                participantCount = participant_count;\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                participantCount\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== groupCallId) return;\n\n        let participantCount = 0;\n        const groupCall = CallStore.get(groupCallId);\n        if (groupCall) {\n            const { participant_count } = groupCall;\n            participantCount = participant_count;\n        }\n\n        this.setState({ participantCount });\n    };\n\n    render() {\n        const { t, participantsOnly } = this.props;\n        const { participantCount } = this.state;\n        // console.log('[call][GroupCallPanelSubtitle] render');\n\n        return (\n            <div className='group-call-join-panel-subtitle'>\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\n            </div>\n        );\n    }\n\n}\n\nGroupCallJoinPanelSubtitle.propTypes = {\n    groupCallId: PropTypes.number,\n    participantsOnly: PropTypes.bool\n};\n\nGroupCallJoinPanelSubtitle.defaultProps = {\n    participantsOnly: false\n}\n\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from '../Tile/UserTile';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallRecentParticipants.css';\n\nfunction speakersEquals(lhs, rhs) {\n    if (lhs.length !== rhs.length) return false;\n\n    for (let i = 0; i < lhs.length; i++) {\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\n    }\n\n    return true;\n}\n\nclass GroupCallRecentParticipants extends React.Component {\n    state = {\n        speakers: []\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { speakers } = this.state;\n\n        if (!speakersEquals(nextState.speakers, speakers)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { id } = props;\n        const { prevId } = state;\n\n        if (prevId !== id) {\n            let speakers = [];\n            const groupCall = CallStore.get(id);\n            if (groupCall) {\n                const { recent_speakers } = groupCall;\n                speakers = recent_speakers;\n            }\n\n            return {\n                prevId: id,\n                speakers\n            };\n        }\n\n        return null;\n    }\n\n    loadContent(speakers) {\n        const store = FileStore.getStore();\n        loadUsersContent(store, speakers.map(x => x.user_id));\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.speakers);\n\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { id } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== id) return;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        clearTimeout(this.timeout);\n        if (!speakers.length) {\n            this.setState({ speakers: [] });\n        } else {\n            this.loadContent(speakers);\n\n            this.timeout = setTimeout(() => {\n                this.updateSpeakers();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        }\n    };\n\n    updateSpeakers() {\n        const { id } = this.props;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        this.setState({ speakers });\n    }\n\n    render() {\n        const { speakers } = this.state;\n        if (!speakers) return null;\n        if (!speakers.length) return null;\n\n        return (\n            <div className='group-call-recent-participants'>\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallRecentParticipants.propTypes = {\n    id: PropTypes.number\n};\n\nexport default GroupCallRecentParticipants;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './GroupCallJoinPanel.css';\n\nclass GroupCallJoinPanel extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n\n            let groupCallId = 0;\n            if (chat) {\n                const { voice_chat_group_call_id } = chat;\n                groupCallId = voice_chat_group_call_id;\n            }\n\n            const { currentGroupCall } = CallStore;\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\n\n            return {\n                prevChatId: chatId,\n                groupCallId,\n                isCurrent\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { isCurrent, groupCallId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.groupCallId !== groupCallId) {\n            return true;\n        }\n\n        if (nextState.isCurrent !== isCurrent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    handleUpdateChatVoiceChat = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if ( chatId !== chat_id) return;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n\n        this.setState({\n            groupCallId: voice_chat_group_call_id\n        });\n    }\n\n    handleUpdateGroupCall = update => {\n        const { group_call } = update;\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\n\n        this.setState({\n            groupCallId: group_call ? group_call.id : 0\n        });\n    };\n\n    handleClientUpdateGroupCall = update => {\n        const { chatId } = this.props;\n\n        const { currentGroupCall } = CallStore;\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\n\n        this.setState({ isCurrent });\n    };\n\n    handleJoin = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { voice_chat_group_call_id } = chat;\n        const groupCall = CallStore.get(voice_chat_group_call_id);\n        console.log('[call] handleJoin', groupCall);\n        if (groupCall && groupCall.is_joined) return;\n\n        const muted = true;\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const { groupCallId, isCurrent } = this.state;\n        if (!groupCallId) return null;\n        if (isCurrent) return null;\n\n        return (\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\n                <div className='group-call-join-panel-content'>\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\n                </div>\n                <GroupCallRecentParticipants id={groupCallId}/>\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\n                    {t('VoipChatJoin')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nGroupCallJoinPanel.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallJoinPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport User from '../Tile/User';\nimport ChatStore from '../../Stores/ChatStore';\nimport './InputBoxHints.css'\n\nclass InputBoxHints extends React.Component {\n    state = {\n        local: [],\n        global: [],\n        id: null\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { local, global, id } = this.state;\n\n        if (nextState.local !== local) {\n            return true;\n        }\n\n        if (nextState.global !== global) {\n            return true;\n        }\n\n        if (nextState.id !== id) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    onClientUpdateHintsClose = update => {\n        this.setState({\n            id: null,\n            local: [],\n            global: []\n        });\n    };\n\n    onClientUpdateHintsGlobal = update => {\n        const { id, global } = update;\n        if (this.state.id !== id) return;\n\n        this.setState({\n            id,\n            global\n        });\n    };\n\n    onClientUpdateHintsLocal = update => {\n        const { id, local } = update;\n\n        this.setState({\n            id,\n            local,\n            global: []\n        });\n    };\n\n    render() {\n        const { local, global } = this.state;\n\n        const results = (local || []).concat(global || []);\n\n        // console.log('[hints] render', local, global, results);\n        if (!results.length) return null;\n\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n            </div>\n        );\n    }\n\n}\n\nInputBoxHints.propTypes = {};\n\nexport default InputBoxHints;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\n    'ArrowTopRight'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\n    'ShareFilled'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PendingIcon from '../../../Assets/Icons/Pending';\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport { openChatSelect } from '../../../Actions/Message';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleCallbackQueryAnswer = (type, result, message) => {\n        const { chatId } = this.props;\n        const { sender, content, via_bot_user_id } = message;\n        const { text, show_alert, url } = result;\n        const { game } = content;\n\n        let title = '';\n        if (message) {\n            if (via_bot_user_id) {\n                title = getUserFullName(via_bot_user_id, null);\n            } else {\n                title = getChatTitle(chatId, false);\n            }\n        }\n        title = title || LStore.getString('Bot');\n\n        if (text) {\n            if (show_alert) {\n                showAlert({\n                    title,\n                    message: text,\n                    ok: LStore.getString('OK')\n                });\n            } else {\n                showSnackbar(text, closeSnackbar => snackKey => {\n                    return (\n                        <IconButton\n                            key='close'\n                            aria-label='Close'\n                            color='inherit'\n                            className='notification-close-button'\n                            onClick={() => { closeSnackbar(snackKey); }}>\n                            <CloseIcon />\n                        </IconButton>\n                    )\n                });\n            }\n        } else if (url) {\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                const userId = via_bot_user_id ? via_bot_user_id : sender.user_id;\n                const user = UserStore.get(userId);\n\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n            } else {\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n            }\n        }\n    };\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                showAlert({\n                    title: LStore.getString('AppName'),\n                    message: LStore.getString('PaymentsNotSupported'),\n                    ok: LStore.getString('OK')\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                this.handleCallbackQueryAnswer(type, result, message);\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                this.setState({ loading: true });\n                const passwordState = await TdLibController.send({\n                    '@type': 'getPasswordState'\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { has_password } = passwordState;\n                if (!has_password) break;\n\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\n                    console.log('[pwd] onPassword', password);\n                    this.setState({ loading: true });\n                    let error = null;\n                    const result = await TdLibController.send({\n                        '@type': 'getCallbackQueryAnswer',\n                        chat_id: chatId,\n                        message_id: messageId,\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\n                    }).catch(e => {\n                        error = e;\n                    }).finally(() => {\n                        this.setState({ loading: false });\n                    });\n\n                    if (error) {\n                        console.log('[pwd] onPassword error', error);\n                        onError && onError(error);\n                    } else if (result) {\n                        console.log('[pwd] onPassword result', result);\n                        onCloseDialog && onCloseDialog();\n                        this.handleCallbackQueryAnswer(type, result, message);\n                    }\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// youtube\n                const { in_current_chat, query } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, via_bot_user_id } = message;\n                let userId = sender.user_id;\n                if (via_bot_user_id !== 0) {\n                    userId = via_bot_user_id;\n                }\n\n                const user = UserStore.get(userId);\n                if (!user) break;\n\n                const inline = `@${user.username} ${query}`;\n\n                if (in_current_chat){\n                    setText(inline);\n                } else {\n                    openChatSelect({ switchInline: inline });\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    getIcon(type) {\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                const { in_current_chat } = type;\n\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n        }\n    }\n\n    render() {\n        const { text, type } = this.props;\n        const { loading } = this.state;\n\n        const icon = this.getIcon(type);\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                {text}\n                {icon}\n                {loading && (\n                    <PendingIcon\n                        className='keyboard-button-progress'\n                        viewBox='0 0 14 14'\n                    />\n                )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\n            let totalLength = 0;\n            if (site_name) {\n                totalLength += site_name.length;\n            }\n            if (title) {\n                totalLength += title.length;\n            }\n            if (description) {\n                totalLength += description.text.length;\n            }\n\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport ReplyMarkup from './Markup/ReplyMarkup';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle,\n    isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\nconst request = require('request');\n\nlet pageLink = null;\nlet startSiteVisit = false;\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageContent = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageEdited = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    handleUpdateMessageContentAndEditedOnce = () => {\n        const { updateMessageContent, updateMessageEdited } = this;\n        this.updateMessageContent = null;\n        this.updateMessageEdited = null;\n\n        if (!updateMessageContent && !updateMessageEdited) return;\n\n        const { chatId, messageId } = this.props;\n\n        let handled = false;\n        if (updateMessageContent) {\n            const { emojiMatches } = this.state;\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\n            if (newEmojiMatches !== emojiMatches) {\n                handled = true;\n                this.setState({ emojiMatches: newEmojiMatches });\n            }\n        }\n\n        if (handled) return;\n\n        startMessageEditing(chatId, messageId);\n        this.forceUpdate(() => {\n            stopMessageEditing(chatId, messageId);\n        });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded =\n            !hasCaption  && (\n                content['@type'] === 'messageAnimation' ||\n                content['@type'] === 'messageVideo' ||\n                content['@type'] === 'messagePhoto' ||\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\n        const showMeta = withBubble && content['@type'] !== 'messageCall';\n\n        // TODO: comment                \n        console.log('Chuks:Message' + JSON.stringify(message));\n        console.log('[p] m.render id=' + message.id);\n        if (JSON.stringify(message).toLowerCase().match('starte')) {\n            startSiteVisit = true;\n            console.log('started');\n        }\n        if (JSON.stringify(message).toLowerCase().match('stope')) {\n            startSiteVisit = false;\n            console.log('stoped');\n        }\n        if (reply_markup !== null && reply_markup !== '' && reply_markup !== undefined) {\n            const msg = reply_markup['rows'][0][0];\n            const urlExists = JSON.stringify(msg).toLowerCase().match('url');\n            if (startSiteVisit && msg !== null && urlExists !== null) {\n                const url = msg['type']['url'];\n                pageLink = url;\n                console.log(JSON.stringify(url));\n                // request\n                // .get('http://google.com/')\n                // .on('response', function(response) {\n                //     console.log(response.statusCode) // 200\n                //     console.log(response.headers['content-type']) // 'image/png'\n                // })\n                // .on('error', function(err) {\n                //     console.error(err)\n                //   });\n                //   const options = {\n                //     url: 'http://google.com/',\n                //     method: 'GET',\n                //     headers: {\n                //         'Access-Control-Allow-Credentials': 'true', \n                //         'Access-Control-Allow-Origin': 'http://localhost:3000',\n                //     }\n                // };\n                 request(url, (err, resp, body) => {\n                    console.log('err: '+JSON.stringify(err));\n                    console.log('resp: '+JSON.stringify(resp));\n                    console.log('body: '+JSON.stringify(body));\n                \t// bot.sendMessage(msg.chat.id, 'Site visit completed');\n                });\n            }\n        } else {\n            pageLink = null;\n        }\n        \n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                            {pageLink}\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {showMeta && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\nimport MessageMenu from './MessageMenu';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false,\n            contextMenu: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted, contextMenu } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted, contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={null}\n                    source={'chat'}\n                />\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\nimport InputBoxHints from './InputBoxHints';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { sendBotStartMessage } from '../../Actions/Message';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateStartMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { history } = this.state;\n        if (!history.length) return;\n\n        const { current: list } = this.listRef;\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\n            return;\n        }\n\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\n\n        this.scrollBottomAfterEditing = {\n            chatId,\n            messageId\n        };\n    };\n\n    onClientUpdateStopMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { scrollBottomAfterEditing } = this;\n        if (!scrollBottomAfterEditing) return;\n\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\n\n        const { current: list } = this.listRef;\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\n        this.scrollBottomAfterEditing = null;\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        const { prevScrollTop, prevOffsetHeight } = this;\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n                if (this.props.options) {\n                    const { botStartMessage } = this.props.options;\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\n                        const { botUserId, parameter } = botStartMessage;\n\n                        await sendBotStartMessage(chatId, botUserId, parameter);\n                    }\n                }\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\n        if (hasLastMessage) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <div className='messages-list-top-panel'>\n                    <GroupCallJoinPanel chatId={chatId}/>\n                    <ActionBar chatId={chatId} />\n                </div>\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n                {/*<InputBoxHints />*/}\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    options: PropTypes.object,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { closeChatSelect } from '../../Actions/Message';\nimport './SelectChatPlaceholder.css';\n\nclass SelectChatPlaceholder extends React.Component {\n\n    handleClick = () => {\n        closeChatSelect();\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\n            </div>\n        );\n    }\n\n}\n\nSelectChatPlaceholder.propTypes = {};\n\nexport default withTranslation()(SelectChatPlaceholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null,\n            chatSelectOptions: null,\n            chatOpenOptions: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\n            return true;\n        }\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateClearOpenChatOptions = update => {\n        this.setState({\n            chatOpenOptions: null\n        });\n    }\n\n    onClientUpdateChatSelect = update => {\n        const { options } = update;\n\n        this.setState({\n            chatSelectOptions: options\n        });\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatSelectOptions } = this.state;\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\n\n        this.setState({\n            chatId,\n            messageId,\n            chatOpenOptions,\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <GroupCallTopPanel/>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\n                </div>\n                {chatSelectOptions && <SelectChatPlaceholder/>}\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        messageIds.sort();\n\n        this.targetChats.forEach(async targetChatId => {\n            if (inputMessageContent) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BlobDrawable, {\n    AMPLITUDE_SPEED,\n    FORM_BIG_MAX,\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\n    SCALE_BIG,\n    SCALE_BIG_MIN,\n    SCALE_SMALL,\n    SCALE_SMALL_MIN\n} from './BlobDrawable';\nimport {\n    MUTE_BUTTON_STATE_CONNECTING,\n    MUTE_BUTTON_STATE_MUTE,\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\n    MUTE_BUTTON_STATE_UNMUTE\n} from './TopBar';\nimport { stopPropagation } from '../../Utils/Message';\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\nclass OvershootInterpolator {\n    constructor(tension) {\n        this.mTension = tension;\n    }\n\n    getInterpolation(t) {\n        // _o(t) = t * t * ((tension + 1) * t + tension)\n        // o(t) = _o(t - 1) + 1\n        t -= 1.0;\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\n    }\n}\n\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\nclass DecelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n    }\n\n    getInterpolation(input) {\n        let result;\n        if (this.mFactor === 1.0) {\n            result = 1.0 - (1.0 - input) * (1.0 - input);\n        } else {\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\n        }\n        return result;\n    }\n}\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\nclass AccelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n        this.mDoubleFactor = 2 * this.mFactor;\n    }\n\n    getInterpolation(input) {\n        if (this.mFactor === 1.0) {\n            return input * input;\n        }\n\n        return Math.pow(input, this.mDoubleFactor);\n    }\n}\n\nclass WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    update(top, left, size, dt) {\n        // TODO: move gradient here\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\n\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.3, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#77E55C');\n            gradient.addColorStop(1, '#56C7FE');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#66D4FB');\n            gradient.addColorStop(1, '#539EF8');\n\n            return gradient;\n        } else {\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\n\n            gradient.addColorStop(0, '#2B333E');\n            gradient.addColorStop(1, '#2B333E');\n\n            return gradient;\n        }\n    }\n}\n\nclass RadialProgressView {\n    constructor() {\n        this.decelerateInterpolator = new DecelerateInterpolator();\n        this.accelerateInterpolator = new AccelerateInterpolator();\n\n        this.lineCap = 'round';\n        this.lineWidth = 3;\n        this.progressColor = '#1C93E3';\n        this.updateProgressPaint();\n\n        this.lastUpdateTime = 0;\n        this.radOffset = 0;\n        this.currentCircleLength = 0;\n        this.risingCircleLength = false;\n        this.currentProgressTime = 0;\n        this.useSelfAlpha = false;\n        this.drawingCircleLength = 0;\n\n        this.rotationTime = 2000;\n        this.risingTime = 500;\n        this.size = 0;\n\n        this.currentProgress = 0;\n        this.progressAnimationStart = 0;\n        this.progressTime = 0;\n        this.animatedProgress = 0;\n        this.circle = false;\n        this.circleProgress = 0;\n        this.noProgress = true;\n    }\n\n    setUseSelfAlpha = value => {\n        this.useSelfAlpha = value;\n    };\n\n    setAlpha = alpha => {\n        console.log('[rpv] setAlpha', alpha);\n    };\n\n    setNoProgress = value => {\n        this.noProgress = value;\n    };\n\n    setProgress = value => {\n        this.currentProgress = value;\n        if (this.animatedProgress > value) {\n            this.animatedProgress = value;\n        }\n\n        this.progressAnimationStart = this.animatedProgress;\n        this.progressTime = 0;\n    };\n\n    updateAnimation = () => {\n        const newTime = new Date();\n        let dt = newTime - this.lastUpdateTime;\n        if (dt > 17) {\n            dt = 17;\n        }\n        this.lastUpdateTime = newTime;\n\n        this.radOffset += 360 * dt / this.rotationTime;\n        let count = Math.trunc(this.radOffset / 360);\n        this.radOffset -= count * 360;\n\n        if (this.circle && this.circleProgress !== 1.0) {\n            this.circleProgress += 16 / 220;\n            if (this.circleProgress > 1.0) {\n                this.circleProgress = 1.0;\n            }\n        } else if (!this.circle && this.circleProgress !== 0.0) {\n            this.circleProgress -= 16 / 400;\n            if (this.circleProgress < 0) {\n                this.circleProgress = 0;\n            }\n        }\n\n        if (this.noProgress) {\n            if (this.circleProgress === 0) {\n                this.currentProgressTime += dt;\n                if (this.currentProgressTime >= this.risingTime) {\n                    this.currentProgressTime = this.risingTime;\n                }\n                if (this.risingCircleLength) {\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                } else {\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                }\n\n                if (this.currentProgressTime === this.risingTime) {\n                    if (this.risingCircleLength) {\n                        this.radOffset += 270;\n                        this.currentCircleLength = -266;\n                    }\n\n                    this.risingCircleLength = !this.risingCircleLength;\n                    this.currentProgressTime = 0;\n                }\n            } else {\n                if (this.risingCircleLength) {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                    this.currentCircleLength += 360 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                } else {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                    this.currentCircleLength -= 364 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                }\n            }\n        }\n        else {\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\n            if (progressDiff > 0) {\n                progressDiff += dt;\n                if (this.progressTime >= 200) {\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\n                    this.progressTime = 0;\n                } else {\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\n                }\n            }\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\n        }\n    };\n\n    setSize = size => {\n        this.size = size;\n    };\n\n    setStrokeWidth = value => {\n        this.lineWidth = value;\n        this.updateProgressPaint();\n    };\n\n    setProgressColor = color => {\n        this.progressColor = color;\n        this.updateProgressPaint();\n    };\n\n    updateProgressPaint() {\n        this.progressPaint = ctx => {\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineWidth) {\n                ctx.lineWidth = this.lineWidth;\n            }\n            if (this.progressColor) {\n                ctx.strokeStyle = this.progressColor;\n            }\n        };\n    }\n\n    toCircle = (toCircle, animated) => {\n        this.circle = toCircle;\n        if (!animated) {\n            this.circleProgress = this.circle ? 1.0 : 0.0;\n        }\n    }\n\n    draw = (canvas, cx, cy, scale = 1) => {\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(cx, cy);\n            ctx.scale(scale, scale);\n            ctx.beginPath();\n            if (!this.risingCircleLength) {\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\n                    this.currentCircleLength = 0;\n                }\n            }\n\n            const radStart = this.radOffset * Math.PI / 180;\n            this.drawingCircleLength = this.currentCircleLength;\n            const radLength = this.drawingCircleLength * Math.PI / 180;\n\n\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\n            this.progressPaint(ctx);\n            ctx.stroke();\n            ctx.restore();\n\n            this.updateAnimation();\n        }\n    }\n\n    isCircle = () => {\n        return Math.abs(this.drawingCircleLength) >= 360;\n    }\n}\n\nclass Button extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.radialPaint = ctx => { };\n        this.paint = ctx => { };\n        this.paintTmp = ctx => { };\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.switchProgress = 1.0;\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\n        this.prevState = null;\n        this.currentState = this.states[this.muteButtonState];\n        this.progressToState = 1.0;\n\n        this.showLightingProgress = 1.0;\n        this.showWavesProgress = 1.0;\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\n        this.colorsTmp = new Array(3);\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n\n        this.buttonDefaultRadius = 57;\n        this.buttonRadius = 52;\n        this.strokeWidth = 4;\n        this.invalidateColors = true;\n        this.radialProgressView = new RadialProgressView();\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\n        this.radialProgressView.setProgressColor('#28BAFF');\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n\n        this.canvas = document.getElementById('button-canvas');\n        this.tinyWaveDrawable = new BlobDrawable(9);\n        this.bigWaveDrawable = new BlobDrawable(12);\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.generateInitBlob();\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.generateInitBlob();\n\n        const color = '#66D4FB';\n        this.radialGradient = ctx => {\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\n            gradient.addColorStop(0, color + '32');\n            gradient.addColorStop(1, color + '00');\n\n            ctx.fillStyle = gradient;\n        };\n        this.radialPaint = this.radialGradient;\n\n        this.setAmplitude(this.amplitude);\n\n        // console.log('[button] componentDidMount draw');\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n        this.forceUpdate();\n    }\n\n    fillColors(stateId, colorsToSet) {\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\n            colorsToSet[0] = '#66D4FB';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\n            colorsToSet[0] = '#7DDCAA';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            colorsToSet[0] = '#766EE9';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else {\n            colorsToSet[0] = '#1C2229';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        }\n    }\n\n    strToHex(n) {\n        let s = n.toString(16);\n        if (s.length === 1) {\n            s = '0' + s;\n        }\n        return s;\n    }\n\n    blendARGB(color1, color2, ratio) {\n        if (color1.length <= 7) {\n            color1 += 'FF';\n        }\n        if (color2.length <= 7) {\n            color2 += 'FF';\n        }\n        const c1 = {\n            r: parseInt(color1.substr(1, 2), 16),\n            g: parseInt(color1.substr(3, 2), 16),\n            b: parseInt(color1.substr(5, 2), 16),\n            a: parseInt(color1.substr(7, 2), 16),\n        };\n        const c2 = {\n            r: parseInt(color2.substr(1, 2), 16),\n            g: parseInt(color2.substr(3, 2), 16),\n            b: parseInt(color2.substr(5, 2), 16),\n            a: parseInt(color2.substr(7, 2), 16),\n        };\n\n        const inverseRatio = 1 - ratio;\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\n\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        if (!this.focused && this.switchProgress >= 1.0) {\n            return;\n        }\n        // console.log('[button] draw', [this.focused, this.mounted]);\n        const { currentState, prevState, left, top, right, bottom } = this;\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        let canSwitchProgress = true;\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, true);\n            if (!this.radialProgressView.isCircle()) {\n                canSwitchProgress = false;\n            }\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, false);\n        }\n\n        if (canSwitchProgress) {\n            if (this.switchProgress !== 1) {\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.switchProgress += dt / 100;\n                } else {\n                    this.switchProgress += dt / 180;\n                }\n\n                if (this.switchProgress >= 1.0) {\n                    this.switchProgress = 1.0;\n                    this.prevState = null;\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        this.radialProgressView.toCircle(false, true);\n                    }\n                }\n                this.invalidateColors = true;\n            }\n\n            if (this.invalidateColors && currentState) {\n                this.invalidateColors = false;\n                let lightingColor;\n                if (prevState) {\n                    this.fillColors(prevState.stateId, this.colorsTmp);\n                    const oldLight = this.colorsTmp[0];\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    const newLight = this.colorsTmp[0];\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\n                } else {\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    lightingColor = this.colorsTmp[0];\n                }\n                if (this.currentLightColor !== lightingColor) {\n                    this.radialGradient = ctx => {\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\n\n                        gradient.addColorStop(0, lightingColor + '3C');\n                        gradient.addColorStop(1, lightingColor + '00');\n\n                        ctx.fillStyle = gradient;\n                    };\n                    this.currentLightColor = lightingColor;\n                }\n            }\n\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\n            }\n\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                this.showWavesProgress -= dt / 180;\n                if (this.showWavesProgress < 0) {\n                    this.showWavesProgress = 0;\n                }\n            } else {\n                if (showWaves && this.showWavesProgress !== 1) {\n                    this.showWavesProgress += dt / 350;\n                    if (this.showWavesProgress > 1) {\n                        this.showWavesProgress = 1;\n                    }\n                } else if (!showWaves && this.showWavesProgress !== 0) {\n                    this.showWavesProgress -= dt / 350;\n                    if (this.showWavesProgress < 0) {\n                        this.showWavesProgress = 0;\n                    }\n                }\n            }\n\n            if (showLighting && this.showLightingProgress !== 1) {\n                this.showLightingProgress += dt / 350;\n                if (this.showLightingProgress > 1) {\n                    this.showLightingProgress = 1;\n                }\n            } else if (!showLighting && this.showLightingProgress !== 0) {\n                this.showLightingProgress -= dt / 350;\n                if (this.showLightingProgress < 0) {\n                    this.showLightingProgress = 0;\n                }\n            }\n        }\n\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\n\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.resetTransform();\n\n        const cx = this.cx;\n        const cy = this.cy;\n\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\n            let progress;\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                progress = this.switchProgress;\n                this.paint = prevState.shader;\n            } else {\n                progress = 1.0 - this.switchProgress;\n                this.paint = currentState.shader;\n            }\n\n            this.paintTmp = ctx => {\n                ctx.fillStyle = '#2B333E';\n            }\n\n            let paint = ctx => {\n                this.paint(ctx, left, top, right, bottom);\n            };\n\n            ctx.globalAlpha = 1.0;\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n\n            ctx.globalAlpha = 0.3;\n            // big wave\n            ctx.save();\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n            ctx.restore();\n\n            // small wave\n            ctx.save();\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n            ctx.restore();\n\n            ctx.globalAlpha = 1.0;\n            if (canSwitchProgress) {\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                paint = ctx => {\n                    ctx.fillStyle = '#28BAFF';\n                };\n                if (progress !== 0) {\n                    ctx.globalAlpha = progress;\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                }\n            }\n            ctx.globalAlpha = 1.0;\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\n            if  (!canSwitchProgress) {\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n            }\n            ctx.restore();\n        } else {\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                ctx.globalAlpha = 1.0;\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n                if (i === 1) {\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n                }\n\n                ctx.globalAlpha = 0.3 * alpha;\n                // big wave\n                ctx.save();\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n                ctx.restore();\n\n                // small wave\n                ctx.save();\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n                ctx.restore();\n            }\n\n            // button\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                if (i === 0) {\n                    ctx.globalAlpha = 1.0;\n                } else {\n                    ctx.globalAlpha = alpha;\n                }\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\n\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n                }\n            }\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.translate(cx, cy);\n        ctx.scale(scale, scale);\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\n        ctx.closePath();\n        paint && paint(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    updateMuteButton = (stateId, animated) => {\n        const { muteButtonState } = this;\n        if (muteButtonState === stateId && animated) {\n            return;\n        }\n\n        // TODO: add text animation\n\n        if (animated) {\n            this.muteButtonState = stateId;\n        } else {\n            this.muteButtonState = stateId;\n        }\n        this.updateMuteButtonState(animated);\n    }\n\n    updateMuteButtonState (animated) {\n        const { states, currentState, muteButtonState } = this;\n\n        if (states[muteButtonState] !== currentState) {\n            this.prevState = currentState;\n            this.currentState = states[muteButtonState];\n            if (!this.prevState || !animated) {\n                this.switchProgress = 1.0;\n                this.prevState = null;\n            } else {\n                this.switchProgress = 0.0;\n            }\n        }\n\n        if (!animated) {\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\n            }\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\n        }\n    }\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\n    }\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    }\n\n    render() {\n        const { children, onClick } = this.props;\n        const { left, right, top, bottom, scale } = this;\n\n        return (\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-14px)' }}>\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n                <div style={{\n                    position: 'absolute',\n                    background: 'transparent',\n                    width: 104,\n                    height: 104,\n                    borderRadius: '50%',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    left: '50%',\n                    top: '50%',\n                    marginLeft: -52,\n                    marginTop: -38,\n                    cursor: 'pointer'\n                }}\n                     onMouseDown={stopPropagation}\n                     onClick={onClick}>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nButton.propTypes = {};\n\nexport default Button;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport AnimatedItem from '../ColumnMiddle/AnimatedItem';\nimport './GroupCallMicButtonHint.css';\n\nclass GroupCallMicButtonHint extends React.Component {\n\n    getItemTemplate = item => {\n        const { t } = this.props;\n\n        let title = '';\n        let subtitle = '';\n        switch (item) {\n            case 'muted': {\n                title = t('VoipGroupUnmute');\n                subtitle = t('VoipHoldAndTalk');\n                break;\n            }\n            case 'unmuted': {\n                title = t('VoipTapToMute');\n                break;\n            }\n            case 'forceMuted': {\n                title = t('VoipMutedByAdmin');\n                subtitle = t('VoipMutedByAdminInfo');\n                break;\n            }\n            case 'connecting': {\n                title = t('Connecting');\n                break;\n            }\n        }\n\n        return (\n            <div className='group-call-mic-button-hint-item'>\n                <div className='group-call-mic-button-hint-title'>{title}</div>\n                {subtitle && <div className='group-call-mic-button-hint-subtitle'>{subtitle}</div>}\n            </div>\n        );\n    }\n\n    render() {\n        const { className, status } = this.props;\n\n        return (\n            <div className={classNames('group-call-mic-button-hint', className)}>\n                <AnimatedItem item={status} height={37} getItemTemplate={this.getItemTemplate} scrollDown={true} animateOnMount={false}/>\n            </div>\n        );\n    }\n}\n\nGroupCallMicButtonHint.propTypes = {\n    status: PropTypes.string\n};\n\nexport default withTranslation()(GroupCallMicButtonHint);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from './Button';\nimport GroupCallMicButtonHint from './GroupCallMicButtonHint';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallMicButton.css';\n\nclass GroupCallMicButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.buttonRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected, animated, shook } = this.state;\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (shook !== nextState.shook) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes } = update;\n        if (!amplitudes.length) return;\n\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            if (type === 'input') {\n                this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\n                return;\n            }\n        }\n    };\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id, is_muted } = participant\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    };\n\n    handleClick = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            const { shook } = this.state;\n            if (shook) {\n                this.setState({\n                    shook: false\n                }, () => {\n                    requestAnimationFrame(() => {\n                        this.setState({ shook: true });\n                    })\n                });\n            } else {\n                this.setState({\n                    shook: true\n                });\n            }\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    render() {\n        const { status, connected, animated, shook } = this.state;\n        // console.log('[call][GroupCallMicButton] render');\n\n        return (\n            <div className='group-call-mic-button-wrapper' >\n                {animated ? (\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </Button>\n                ) : (\n                    <div className={classNames('group-call-mic-button',\n                        {\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-unmuted': connected && status === 'unmuted',\n                            'group-call-connecting': !connected,\n                        })}\n                         onClick={this.handleClick}\n                    >\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </div>\n                )}\n                <GroupCallMicButtonHint className={shook ? 'shook-horizontal' : ''} status={connected ? status : 'connecting'}/>\n            </div>\n        )\n    }\n}\n\nGroupCallMicButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallMicButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getCallStatus } from '../../Calls/Utils';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallPanelButtons.css'\n\nclass GroupCallPanelButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected } = this.state;\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        });\n    };\n\n    render() {\n        const { children } = this.props;\n        const { status, connected } = this.state;\n        // console.log('[call][GroupCallPanelButtons] render');\n\n        return (\n            <div className={classNames('group-call-panel-buttons', {\n                'group-call-connecting': !connected,\n                'group-call-muted': connected && status === 'muted',\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\n                'group-call-unmuted': connected && status === 'unmuted',\n            })}>\n                {children}\n            </div>\n        );\n    }\n}\n\nGroupCallPanelButtons.propTypes = {};\n\nexport default GroupCallPanelButtons;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\n    'AddMember'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\n    'MicOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\n    'MicOffOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport MicIcon from '../../Assets/Icons/MicOutlined';\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\nimport UserTile from '../Tile/UserTile';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getUserFullName } from '../../Utils/User';\nimport { openUser } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallParticipant.css';\n\nclass GroupCallParticipant extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        participant: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, groupCallId } = props;\n        const { prevUserId, prevGroupCallId } = state;\n\n        if (prevUserId !== userId || prevGroupCallId !== groupCallId) {\n            const participants = CallStore.participants.get(groupCallId) || new Map();\n            const participant = participants.get(userId);\n\n            return {\n                prevUserId: userId,\n                prevGroupCallId: groupCallId,\n                participant\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participant, left, top, contextMenu } = this.state;\n\n        if (participant !== nextState.participant) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId, userId } = this.props;\n        const { group_call_id, participant } = update;\n        if (groupCallId !== group_call_id) return;\n        if (!participant) return;\n\n        const { user_id } = participant;\n        if (userId !== user_id) return;\n\n        this.setState({\n            participant\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleOpenProfile = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, true);\n        closeGroupCallPanel();\n    };\n\n    handleSendMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, false);\n        closeGroupCallPanel();\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, true);\n    };\n\n    handleUnmute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, false);\n    };\n\n    render() {\n        const { userId, t } = this.props;\n        const { contextMenu, left, top, participant } = this.state;\n        // console.log('[call][GroupCallParticipant] render', participant);\n        if (!participant) return null;\n\n        const { is_speaking, is_muted_for_all_users, is_muted_for_current_user, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users } = participant;\n        const isMuted = is_muted_for_all_users || is_muted_for_current_user;\n\n        return (\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\n                <UserTile userId={userId}/>\n                <div className='group-call-participant-content'>\n                    <div className='group-call-participant-content-title'>\n                        {/*{userId}*/}\n                        {getUserFullName(userId)}\n                    </div>\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\n                        {/*{order}*/}\n                        {is_speaking ? t('Speaking') : t('Listening')}\n                    </div>\n                </div>\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': isMuted && !can_unmute_self, 'participant-speaking': is_speaking })}>\n                    {!isMuted || is_speaking ? <MicIcon /> : <MicOffIcon />}\n                </div>\n\n                <Popover\n                    classes={{\n                        paper: 'group-call-participant-menu-root'\n                    }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        { can_be_unmuted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleUnmute}>\n                                <ListItemText primary={t('VoipGroupUnmute')} />\n                            </MenuItem>\n                        )}\n                        { can_be_muted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleMute}>\n                                <ListItemText primary={t('VoipGroupMute')} />\n                            </MenuItem>\n                        )}\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleOpenProfile}>\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\n                        </MenuItem>\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleSendMessage}>\n                            <ListItemText primary={t('SendMessage')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n\n}\n\nGroupCallParticipant.propTypes = {\n    userId: PropTypes.number,\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipant);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\nimport GroupCallParticipant from './GroupCallParticipant';\nimport { albumHistoryEquals, orderCompare } from '../../Utils/Common';\nimport { canManageVoiceChats } from '../../Utils/Chat';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallParticipants.css';\n\nclass GroupCallParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            participants: []\n        };\n\n        this.participantsMap = new Map();\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n            const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n            return {\n                prevGroupCallId: groupCallId,\n                participants: participants.map(x => x.user_id)\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participants } = this.state;\n        if (!albumHistoryEquals(participants, nextState.participants)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.preloadContent();\n\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId } = this.props;\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        if (group_call_id !== groupCallId) return;\n\n        const { order, user_id } = participant;\n        if (order !== '0') {\n            this.participantsMap.set(user_id, user_id);\n            this.loadContent();\n\n            // wait for profile photo\n            setTimeout(() => {\n                this.updateParticipants();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        } else {\n            this.updateParticipants();\n        }\n    };\n\n    updateParticipants() {\n        const { groupCallId } = this.props;\n\n        const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n        const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n        this.setState({\n            participants: participants.map(x => x.user_id)\n        });\n    }\n\n    preloadContent = () => {\n        const { participants } = this.state;\n        if (!participants) return;\n        if (!participants.length) return;\n\n        participants.forEach(x => {\n            this.participantsMap.set(x, x);\n        });\n        this.loadContent();\n    };\n\n    loadContent = () => {\n        const { participantsMap } = this;\n        if (!participantsMap) return;\n        if (!participantsMap.size) return;\n\n        this.participantsMap = new Map();\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, Array.from(participantsMap.keys()));\n    }\n\n    render() {\n        const { t, groupCallId } = this.props;\n        const { participants } = this.state;\n        // console.log('[call][GroupCallParticipants] render');\n\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        const manageGroupCalls = canManageVoiceChats(chatId);\n\n        return (\n            <div className='group-call-participants'>\n                { manageGroupCalls && (\n                    <div className='group-call-participants-invite'>\n                        <AddMemberIcon/>\n                        <div className='group-call-participants-invite-text'>\n                            {t('VoipGroupInviteMember')}\n                        </div>\n                    </div>\n                )}\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallParticipants.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipants);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\n    'Tune'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TuneIcon from '../../Assets/Icons/Tune';\nimport { stopPropagation } from '../../Utils/Message';\nimport './GroupCallSettingsButton.css';\n\nclass GroupCallSettingsButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={onClick}>\n                <TuneIcon />\n            </div>\n        );\n    }\n}\n\nGroupCallSettingsButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default GroupCallSettingsButton;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicButton from './GroupCallMicButton';\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\nimport GroupCallParticipants from './GroupCallParticipants';\nimport GroupCallSettings from './GroupCallSettings';\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallPanel.css';\n\nclass GroupCallPanel extends React.Component {\n    state = {\n        openSettings: false\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenSettings = async event => {\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    render() {\n        const { groupCallId, t } = this.props;\n        const { openSettings } = this.state;\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        return (\n            <div className='group-call-panel'>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption'>\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\n                    </div>\n                    <div style={{ width: 48 }}/>\n                </div>\n                <div className='group-call-panel-participants scrollbars-hidden'>\n                    <GroupCallParticipants groupCallId={groupCallId}/>\n                </div>\n                <GroupCallPanelButtons>\n                    <GroupCallMicButton/>\n                    <div className='group-call-panel-button'>\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\n                        <div className='group-call-panel-button-text'>\n                            {t('Settings')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleLeave}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('Leave')}\n                        </div>\n                    </div>\n                </GroupCallPanelButtons>\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nGroupCallPanel.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport GroupCallPanel from './GroupCallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass GroupCall extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('group-call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('group-call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('group-call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('group-call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('group-call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { groupCallId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='group-call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <GroupCallPanel groupCallId={groupCallId}/>\n            </div>\n        )\n    }\n}\n\nGroupCall.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default GroupCall;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport Actions from './Actions';\nimport Call from './Calls/Call';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport GroupCall from './Calls/GroupCall';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport PipPlayer from './Player/PipPlayer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport CallStore from '../Stores/CallStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            groupCallId: 0,\n            callId: 0\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.on('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.off('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdateCallPanel = update => {\n        const { opened, callId } = update;\n\n        this.setState({\n            callId: opened ? callId : 0\n        });\n    };\n\n    onClientUpdateGroupCallPanel = update => {\n        const { opened } = update;\n        const { currentGroupCall } = CallStore;\n\n        this.setState({\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup, options } = update;\n\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId && !options) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId, options);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            callId,\n            groupCallId,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {Boolean(instantViewContent) && <InstantViewer {...instantViewContent} />}\n                {Boolean(mediaViewerContent) && <MediaViewer {...mediaViewerContent} />}\n                {Boolean(profileMediaViewerContent) && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {Boolean(forwardInfo) && <ForwardDialog {...forwardInfo} />}\n                {Boolean(videoInfo) && <PipPlayer {...videoInfo}/>}\n                {Boolean(groupCallId) && <GroupCall groupCallId={groupCallId}/>}\n                {Boolean(callId) && <Call callId={callId}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n"],"sourceRoot":""}